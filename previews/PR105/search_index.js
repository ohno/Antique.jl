var documenterSearchIndex = {"docs":
[{"location":"PoschlTeller/#Pöschl-Teller-Potential","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"","category":"section"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"The Pöschl-Teller potential is one of the few potentials for which the quantum mechanical Schrödinger equation has an analytical solution. It has a finite number of bound states, which can be inferred easily from its potential strength parameter λ. It is defined for one-dimensional systems.","category":"page"},{"location":"PoschlTeller/#Definitions","page":"Pöschl-Teller Potential","title":"Definitions","text":"","category":"section"},{"location":"PoschlTeller/#Antique.PoschlTeller-PoschlTeller","page":"Pöschl-Teller Potential","title":"Antique.PoschlTeller","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH =\n  - frachbar^22 m fracmathrmd^2mathrmdx ^2\n  - frachbar^2m x_0^2 fraclambda(lambda+1)2 frac1mathrmcosh^2(xx_0)\n\nAfter introducing the dimensionless variables\n\n  x^ast equiv xx_0qquad E^ast equiv frachbar^2m x_0^2 E\n\nthe Schrödinger equation reduces to\n\n  hatH^ast psi(x^ast) = E^ast psi(x^ast)\n\nwith\n\n  hatH^ast = - frac12 fracmathrmd^2mathrmdx^ast^2 - fraclambda(lambda+1)2 frac1mathrmcosh^2(x^ast)\n\nParameters are specified within the following struct:\n\nPT = PoschlTeller(λ=1, m=1.0, ℏ=1.0, x₀=1.0)\n\nlambda determines the potential strength. Currently only integer values for lambda are supported.\n\nReferences\n\nG. Pöschl, E. Teller, Zeitschrift für Physik, 83 (3–4), 143 (1933): More general definitions are given as (2a), (2b) or (11).\nS. Flügge, Practical Quantum Mechanics (Springer Berlin Heidelberg, 1999) p.94 Problem 39. Potential hole of modified Poschl-Teller type.\n\n\n\n\n\n","category":"type"},{"location":"PoschlTeller/#Potential","page":"Pöschl-Teller Potential","title":"Potential","text":"","category":"section"},{"location":"PoschlTeller/#Antique.V-Tuple{PoschlTeller, Any}-PoschlTeller","page":"Pöschl-Teller Potential","title":"Antique.V","text":"V(model::PoschlTeller, x)\n\nbeginaligned\nV(x)\n= -frachbar^2m x_0^2 fraclambda(lambda+1)2 mathrmsech^2(xx_0) \n= -frachbar^2m x_0^2 fraclambda(lambda+1)2 frac1mathrmcosh^2(xx_0) \nendaligned\n\n\n\n\n\n","category":"method"},{"location":"PoschlTeller/#Maximum-Quantum-Number","page":"Pöschl-Teller Potential","title":"Maximum Quantum Number","text":"","category":"section"},{"location":"PoschlTeller/#Antique.nₘₐₓ-Tuple{PoschlTeller}-PoschlTeller","page":"Pöschl-Teller Potential","title":"Antique.nₘₐₓ","text":"nₘₐₓ(model::PoschlTeller)\n\nnote: Note\nNote that the number of bound states nₘₐₓ + 1 is not equal to the maximum quantum number nₘₐₓ, since we count the ground state from n=0 in this model.\n\nn_mathrmmax = leftlfloor lambda rightrfloor - 1\n\n\n\n\n\n","category":"method"},{"location":"PoschlTeller/#Eigenvalues","page":"Pöschl-Teller Potential","title":"Eigenvalues","text":"","category":"section"},{"location":"PoschlTeller/#Antique.E-Tuple{PoschlTeller}-PoschlTeller","page":"Pöschl-Teller Potential","title":"Antique.E","text":"E(model::PoschlTeller; n::Int=0, nocheck=false)\n\nE_n = -frachbar^2m x_0^2fracmu^22\n\nwhere mu = mu(n) = n_mathrmmax-n+1, and n_mathrmmax = leftlfloor lambda rightrfloor - 1.\n\n\n\n\n\n","category":"method"},{"location":"PoschlTeller/#Eigenfunctions","page":"Pöschl-Teller Potential","title":"Eigenfunctions","text":"","category":"section"},{"location":"PoschlTeller/#Antique.ψ-Tuple{PoschlTeller, Any}-PoschlTeller","page":"Pöschl-Teller Potential","title":"Antique.ψ","text":"ψ(model::PoschlTeller, x; n::Int=0)\n\npsi_n(x) = frac(-1)^μsqrtx_0 P_lambda^mu(mathrmtanh(xx_0)) sqrtmufracGamma(lambda-mu+1)Gamma(lambda+mu+1)\n\nwhere mu = mu(n) = n_mathrmmax-n+1, and n_mathrmmax = leftlfloor lambda rightrfloor - 1 and P_lambda^mu are the associated Legendre functions.\n\n\n\n\n\n","category":"method"},{"location":"PoschlTeller/#Associated-Legendre-Polynomials","page":"Pöschl-Teller Potential","title":"Associated Legendre Polynomials","text":"","category":"section"},{"location":"PoschlTeller/#Antique.P-Tuple{PoschlTeller, Any}-PoschlTeller","page":"Pöschl-Teller Potential","title":"Antique.P","text":"P(model::PoschlTeller, x; n=0, m=0)\n\nAssociated Legendre polynomials are the associated Legendre functions for integer indices. Here we use the same notation of the associated Legendre functions as in the model HydrogenAtom.\n\nbeginaligned\nP_n^m(x)\n= left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n= left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n= frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"PoschlTeller/#Usage-and-Examples","page":"Pöschl-Teller Potential","title":"Usage & Examples","text":"","category":"section"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ(), potential V() and nₘₐₓ() will be exported. In this system, the model is generated by PoschlTeller and the parameters λ, m, ℏ, x₀.","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"using Antique\nPT = PoschlTeller(λ=4, m=1.0, ℏ=1.0, x₀=1.0)\n; # hide","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Parameters:","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"PT.λ\nPT.m\nPT.ℏ\nPT.x₀","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Maximum quantum number:","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"nₘₐₓ(PT)","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Eigenvalues:","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"E(PT, n=0)\nE(PT, n=1)\nE(PT, n=2)\nE(PT, n=3)","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Potential energy curve:","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"using CairoMakie\n\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$V(x)$\")\nlines!(ax, -6..6, x -> V(PT, x))\nf","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Wave functions:","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"using CairoMakie\n\n# setting\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$\\psi(x)$\")\n\n# plot\nw0 = lines!(ax, -3..3, x -> ψ(PT, x, n=0))\nw1 = lines!(ax, -3..3, x -> ψ(PT, x, n=1))\nw2 = lines!(ax, -3..3, x -> ψ(PT, x, n=2))\nw3 = lines!(ax, -3..3, x -> ψ(PT, x, n=3))\n\n# legend\naxislegend(ax, [w0, w1, w2, w3], [L\"n=0\", L\"n=1\", L\"n=2\", L\"n=3\"], position=:lb)\n\nf","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Potential energy curve, Energy levels, Wave functions:","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"using CairoMakie\n\n# settings\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$V(x),~E_n,~\\psi_n(x) \\times 5 + E_n$\", aspect=1, limits=(-4,4,-10.5,1))\n# hidespines!(ax)\n# hidedecorations!(ax)\n\nfor n in 0:3\n  # classical turning point\n  xE = acosh(sqrt(PT.λ*(PT.λ+1)/abs(E(PT,n=n))/2))\n  # energy\n  hlines!(ax, E(PT, n=n), color=:black, linewidth=1, linestyle=:dash)\n  lines!(ax, [-xE,xE], fill(E(PT,n=n),2), color=:black, linewidth=2)\n  # wave function\n  lines!(ax, -4..4, x -> E(PT,n=n) + ψ(PT,x,n=n), linewidth=2)\nend\n\n#potential\nlines!(ax, -4..4, x -> V(PT,x), color=:black, linewidth=2)\n\nf\nsave(\"assets/fig/PoschlTeller.png\", f) # hide\n; # hide","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"(Image: )","category":"page"},{"location":"PoschlTeller/#Testing","page":"Pöschl-Teller Potential","title":"Testing","text":"","category":"section"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"Unit testing and Integration testing were done using numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"PoschlTeller/","page":"Pöschl-Teller Potential","title":"Pöschl-Teller Potential","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/PoschlTeller.md\"))","category":"page"},{"location":"InfinitePotentialWell/#Infinite-Potential-Well-(Particle-in-a-Box)","page":"Infinite Potential Well","title":"Infinite Potential Well (Particle in a Box)","text":"","category":"section"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"The infinite potential well (particle in a box) is the simplest model for a quantum mechanical system.","category":"page"},{"location":"InfinitePotentialWell/#Definitions","page":"Infinite Potential Well","title":"Definitions","text":"","category":"section"},{"location":"InfinitePotentialWell/#Antique.InfinitePotentialWell-InfinitePotentialWell","page":"Infinite Potential Well","title":"Antique.InfinitePotentialWell","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m fracmathrmd^2mathrmdx ^2 + V(x)\n\nParameters are specified with the following struct:\n\nIPW = InfinitePotentialWell(L=1.0, m=1.0, ℏ=1.0)\n\nL is the length of the box, m is the mass of particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.31, 2.2 THE INFINITE SQUARE WELL\n\nProofs\n\nEigen Functions & Eigen Values\nNormalization\n\n\n\n\n\n","category":"type"},{"location":"InfinitePotentialWell/#Potential","page":"Infinite Potential Well","title":"Potential","text":"","category":"section"},{"location":"InfinitePotentialWell/#Antique.V-Tuple{InfinitePotentialWell, Any}-InfinitePotentialWell","page":"Infinite Potential Well","title":"Antique.V","text":"V(model::InfinitePotentialWell; x)\n\nV(x) =\nleft\n  beginarrayll\n  0       0 leq x leq L \n  infty  x lt 0 L lt x\n  endarray\nright\n\n\n\n\n\n","category":"method"},{"location":"InfinitePotentialWell/#Eigenvalues","page":"Infinite Potential Well","title":"Eigenvalues","text":"","category":"section"},{"location":"InfinitePotentialWell/#Antique.E-Tuple{InfinitePotentialWell}-InfinitePotentialWell","page":"Infinite Potential Well","title":"Antique.E","text":"E(model::InfinitePotentialWell; n::Int=1)\n\nE_n = frachbar^2 n^2 pi^22 m L^2\n\n\n\n\n\n","category":"method"},{"location":"InfinitePotentialWell/#Eigenfunctions","page":"Infinite Potential Well","title":"Eigenfunctions","text":"","category":"section"},{"location":"InfinitePotentialWell/#Antique.ψ-Tuple{InfinitePotentialWell, Any}-InfinitePotentialWell","page":"Infinite Potential Well","title":"Antique.ψ","text":"ψ(model::InfinitePotentialWell, x; n::Int=1)\n\npsi_n(x) = sqrtfrac2L sin fracnpi xL\n\n\n\n\n\n","category":"method"},{"location":"InfinitePotentialWell/#Usage-and-Examples","page":"Infinite Potential Well","title":"Usage & Examples","text":"","category":"section"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by InfinitePotentialWell and several parameters L, m and ℏ are set as optional arguments.","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"using Antique\nIPW = InfinitePotentialWell(L=1.0, m=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"Parameters:","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"IPW.L\nIPW.m\nIPW.ℏ","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"Eigenvalues:","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"E(IPW, n=1)\nE(IPW, n=2)","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"Wave functions:","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"using CairoMakie\n\n# settings\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$\\psi(x)$\")\n\n# plot\nw1 = lines!(ax, 0..1, x -> ψ(IPW, x, n=1))\nw2 = lines!(ax, 0..1, x -> ψ(IPW, x, n=2))\nw3 = lines!(ax, 0..1, x -> ψ(IPW, x, n=3))\nw4 = lines!(ax, 0..1, x -> ψ(IPW, x, n=4))\nw5 = lines!(ax, 0..1, x -> ψ(IPW, x, n=5))\n\n# legend\naxislegend(ax, [w1, w2, w3, w4, w5], [L\"n=1\", L\"n=2\", L\"n=3\", L\"n=4\", L\"n=5\"], position=:lb)\n\nf","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"Potential energy curve, Energy levels, Wave functions:","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"using CairoMakie\n\n# settings\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$V(x),~E_n,~\\psi_n(x) \\times 5 + E_n$\", aspect=1, limits=(-0.5,1.5,0,140))\n# hidespines!(ax)\n# hidedecorations!(ax)\n\n# plot\nfor n in 1:5\n  # energy\n  lines!(ax, [0,IPW.L], fill(E(IPW,n=n),2), color=:black, linewidth=2)\n  # wave function\n  lines!(ax, 0..IPW.L, x -> E(IPW,n=n) + 5*ψ(IPW,x,n=n), linewidth=2)\nend\n\n#potential\nlines!(ax, [0,0,IPW.L,IPW.L], [140,0,0,140], color=:black, linewidth=2)\n\nf\nsave(\"assets/fig/InfinitePotentialWell.png\", f) # hide\n; # hide","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"(Image: )","category":"page"},{"location":"InfinitePotentialWell/#Testing","page":"Infinite Potential Well","title":"Testing","text":"","category":"section"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"Unit testing and Integration testing were done using numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"InfinitePotentialWell/","page":"Infinite Potential Well","title":"Infinite Potential Well","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/InfinitePotentialWell.md\"))","category":"page"},{"location":"SphericalOscillator/#Spherical-Oscillator","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"","category":"section"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"The spherical oscillator (3D isotropic harmonic oscillator) is the most frequently used model in quantum physics. This model uses a spherical coordinate system.","category":"page"},{"location":"SphericalOscillator/#Definitions","page":"Spherical Oscillator","title":"Definitions","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.SphericalOscillator-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.SphericalOscillator","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(pmbr) = E psi(pmbr)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu nabla^2 + frac12 k r^2\n\nParameters are specified with the following struct:\n\nSO = SphericalOscillator(k=1.0, μ=1.0, ℏ=1.0)\n\nk is the force constant, μ is the mass of particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nS. Flügge, Practical Quantum Mechanics (Springer Berlin Heidelberg, 1999) p.166, Problem 65. Spherical oscillator.\nQuantum harmonic oscillator\nUCSD Physics 130, Quantum Physics\n\n\n\n\n\n","category":"type"},{"location":"SphericalOscillator/#Potential","page":"Spherical Oscillator","title":"Potential","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.V-Tuple{SphericalOscillator, Any}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.V","text":"V(model::SphericalOscillator, r)\n\nV(r)\n= frac12 k r^2\n= frac12 mu omega^2 r^2\n= frac12 hbar omega xi^2\n\nwhere omega = sqrtkmu is the angular frequency and xi = sqrtfracmuomegahbarr.\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Eigenvalues","page":"Spherical Oscillator","title":"Eigenvalues","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.E-Tuple{SphericalOscillator}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.E","text":"E(model::SphericalOscillator; n::Int=0, l::Int=0)\n\nE_nl\n= left(2n + l + frac32right)hbar omega\n\nwhere omega = sqrtkmu.\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Eigenfunctions","page":"Spherical Oscillator","title":"Eigenfunctions","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.ψ-Tuple{SphericalOscillator, Any, Any, Any}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.ψ","text":"ψ(model::SphericalOscillator, r, θ, φ; n::Int=0, l::Int=0, m::Int=0)\n\npsi_nlm(pmbr) = R_nl(r) Y_lm(thetavarphi)\n\nThe domain is 0leq r lt infty 0leq theta lt pi 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Radial-Functions","page":"Spherical Oscillator","title":"Radial Functions","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.R-Tuple{SphericalOscillator, Any}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.R","text":"R(model::SphericalOscillator, r; n=0, l=0)\n\nR_nl(r) = sqrt fracgamma^322sqrtpi sqrtfrac2^n+l+3 n(2n+2l+1) xi^l expleft(-xi^22right)L_n^(l+frac12) left(xi^2right)\n\nwhere gamma = muomegahbar and xi = sqrtgammar = sqrtmuomegahbarr are defined. The generalized Laguerre polynomials are defined as L_n^(alpha)(x) = fracx^-alpha mathrme^xn  fracmathrmd^nmathrmd x^nleft(mathrme^-x x^n+alpharight). The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Generalized-Laguerre-Polynomials","page":"Spherical Oscillator","title":"Generalized Laguerre Polynomials","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.L-Tuple{SphericalOscillator, Any}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.L","text":"L(model::SphericalOscillator, x; n=0, α=0)\n\nnote: Note\nThe generalized Laguerre polynomials L_n^(alpha)(x), not the associated Laguerre polynomials L_n^k(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  L_n^(alpha)(x)\n  = fracx^-alphae^xn fracd^ndx^nleft(x^n+alphae^-xright) \n  = sum_k=0^n(-1)^k left(beginarrayl n+alpha  n-k endarrayright) fracx^kk  \n  = sum_k=0^n(-1)^k fracGamma(alpha+n+1)Gamma(alpha+k+1)Gamma(n-k+1) fracx^kk \nendaligned\n\nExamples:\n\nbeginaligned\n  L_0^(0)(x) = 1 \n  L_1^(0)(x) = 1 - x \n  L_1^(1)(x) = 2 - x \n  L_2^(0)(x) = 1 - 2 x + 12 x^2 \n  L_2^(1)(x) = 3 - 3 x + 12 x^2 \n  L_2^(2)(x) = 6 - 4 x + 12 x^2 \n  L_3^(0)(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^(1)(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_3^(2)(x) = 10 - 10 x + 52 x^2 - 16 x^3 \n  L_3^(3)(x) = 20 - 15 x + 3 x^2 - 16 x^3 \n  L_4^(0)(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 124 x^4 \n  L_4^(1)(x) = 5 - 10 x + 5 x^2 - 56 x^3 + 124 x^4 \n  L_4^(2)(x) = 15 - 20 x + 152 x^2 - 1 x^3 + 124 x^4 \n  L_4^(3)(x) = 35 - 35 x + 212 x^2 - 76 x^3 + 124 x^4 \n  L_4^(4)(x) = 70 - 56 x + 14 x^2 - 43 x^3 + 124 x^4 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Spherical-Harmonics","page":"Spherical Oscillator","title":"Spherical Harmonics","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.Y-Tuple{SphericalOscillator, Any, Any}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.Y","text":"Y(model::SphericalOscillator, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Associated-Legendre-Polynomials","page":"Spherical Oscillator","title":"Associated Legendre Polynomials","text":"","category":"section"},{"location":"SphericalOscillator/#Antique.P-Tuple{SphericalOscillator, Any}-SphericalOscillator","page":"Spherical Oscillator","title":"Antique.P","text":"P(model::SphericalOscillator, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"SphericalOscillator/#Usage-and-Examples","page":"Spherical Oscillator","title":"Usage & Examples","text":"","category":"section"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by SphericalOscillator and several parameters k, μ and ℏ are set as optional arguments.","category":"page"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"using Antique\nSO = SphericalOscillator(k=1.0, μ=1.0, ℏ=1.0)\n; # hide","category":"page"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"Parameters:","category":"page"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"SO.k\nSO.μ\nSO.ℏ","category":"page"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"Eigenvalues:","category":"page"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"E(SO, n=0)\nE(SO, n=1)\nE(SO, n=2)\nE(SO, n=0, l=1)\nE(SO, n=1, l=1)\nE(SO, n=2, l=1)","category":"page"},{"location":"SphericalOscillator/#Testing","page":"Spherical Oscillator","title":"Testing","text":"","category":"section"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"Unit testing and Integration testing were done using a computer algebra system (Symbolics.jl) and numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"SphericalOscillator/","page":"Spherical Oscillator","title":"Spherical Oscillator","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/SphericalOscillator.md\"))","category":"page"},{"location":"DeltaPotential/#Delta-Potential","page":"Delta Potential","title":"Delta Potential","text":"","category":"section"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"The Delta potential is one of the simplest models for a quantum mechanical system in 1D. It always has one bound state and its wave function has a cusp at the origin.","category":"page"},{"location":"DeltaPotential/#Definitions","page":"Delta Potential","title":"Definitions","text":"","category":"section"},{"location":"DeltaPotential/#Antique.DeltaPotential-DeltaPotential","page":"Delta Potential","title":"Antique.DeltaPotential","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m fracmathrmd^2mathrmdx ^2 - alpha delta(x)\n\nParameters are specified with the following struct:\n\nDP = DeltaPotential(α=1.0, m=1.0, ℏ=1.0)\n\nalpha is the potential strength, m is the mass of particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.63, 2.5.2 The Delta-Function Well\nUCSD Physics 130, Quantum Physics\n\n\n\n\n\n","category":"type"},{"location":"DeltaPotential/#Potential","page":"Delta Potential","title":"Potential","text":"","category":"section"},{"location":"DeltaPotential/#Antique.V-Tuple{DeltaPotential, Any}-DeltaPotential","page":"Delta Potential","title":"Antique.V","text":"V(model::DeltaPotential, x)\n\nV(x) = -alpha delta(x)\n\n\n\n\n\n","category":"method"},{"location":"DeltaPotential/#Eigenvalues","page":"Delta Potential","title":"Eigenvalues","text":"","category":"section"},{"location":"DeltaPotential/#Antique.E-Tuple{DeltaPotential}-DeltaPotential","page":"Delta Potential","title":"Antique.E","text":"E(model::DeltaPotential)\n\nE = - fracmalpha^22hbar^2\n\n\n\n\n\n","category":"method"},{"location":"DeltaPotential/#Eigenfunctions","page":"Delta Potential","title":"Eigenfunctions","text":"","category":"section"},{"location":"DeltaPotential/#Antique.ψ-Tuple{DeltaPotential, Any}-DeltaPotential","page":"Delta Potential","title":"Antique.ψ","text":"ψ(model::DeltaPotential, x)\n\npsi(x) = fracsqrtmalphahbar mathrme^-malpha xhbar^2\n\n\n\n\n\n","category":"method"},{"location":"DeltaPotential/#Usage-and-Examples","page":"Delta Potential","title":"Usage & Examples","text":"","category":"section"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by DeltaPotential and several parameters α, m and ℏ are set as optional arguments.","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"using Antique\nDP = DeltaPotential(α=1.0, m=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"Parameters:","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"DP.α\nDP.m\nDP.ℏ","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"Eigenvalues:","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"E(DP)","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"Wave functions:","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"using CairoMakie\n\n# setting\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$\\psi(x)$\")\n\n# plot\nw = lines!(ax, -5..5, x -> ψ(DP, x))\n\nf","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"Potential energy curve, energy levels, wave functions:","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"using CairoMakie\n\n# settings\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$V(x),~E_n,~\\psi_n(x) \\times 5 + E_n$\", aspect=1, limits=(-5,5,-0.6,0.6))\n# hidespines!(ax)\n# hidedecorations!(ax)\n\n# energy\nhlines!(ax, E(DP), color=:black, linewidth=1, linestyle=:dash)\n\n# wave function\nlines!(ax, -5..5, x -> E(DP) + ψ(DP,x), linewidth=2)\n\n#potential\nlines!(ax, [-5,0,0,0,5], [0,0,-1,0,0], color=:black, linewidth=2)\n\nf\nsave(\"assets/fig/DeltaPotential.png\", f) # hide\n; # hide","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"(Image: )","category":"page"},{"location":"DeltaPotential/#Testing","page":"Delta Potential","title":"Testing","text":"","category":"section"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"Unit testing and integration testing were done using numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"DeltaPotential/","page":"Delta Potential","title":"Delta Potential","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/DeltaPotential.md\"))","category":"page"},{"location":"CoulombTwoBody/#Coulomb-2-Body-System","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"This is the model of two particles interacting through Coulomb forces, such as positronium, muonium, hydrogen atoms, deuterium atoms, etc.","category":"page"},{"location":"CoulombTwoBody/#Definitions","page":"Coulomb 2-Body System","title":"Definitions","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.CoulombTwoBody-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.CoulombTwoBody","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(pmbr) = E psi(pmbr)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu nabla^2 + fracz_1 z_2ra_0 E_mathrmh\n\nwhere mu=left(frac1m_1+frac1m_2right)^-1 is the reduced mass of particle 1 and particle 2. The potential includes only Coulomb interaction and it does not include fine or hyperfine interactions in this model. Parameters are specified with the following struct:\n\nCTB = CoulombTwoBody(z₁=-1, z₂=1, m₁=1.0, m₂=1.0, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n\nz₁ is the charge number of particle 1,  z₂ is the charge number of particle 2,  m₁ is the mass of particle 1,  m₂ is the mass of particle 2, m_mathrme is the electron mass (use the same unit as m₁ and m₂. For example of hydrogen atom, use m_mathrme=91093837139times10^-31mathrmkg, m_1=91093837139times10^-31mathrmkg and m_2=167262192595times10^-27mathrmkg in the IS unit system, use m_mathrme=10m_mathrme, m_1=10m_mathrme and m_2=1836152673426m_mathrme in the atomic unit.), a_0 is the Bohr radius, E_mathrmh is the Hartree energy and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nThe Digital Library of Mathematical Functions (DLMF), 18.3 Table1, 18.5 Table1, 18.5.16, 18.5.17\ncpprefjp, assoc_legendre, assoc_laguerre\nA. Messiah, Quanfum Mechanics VOLUME Ⅰ (North-Holland Publishing Company, 1961), p.412 I. THE HYDROGEN ATOM\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.143 4.2 THE HYDROGEN ATOM, p.200 Problem 5.1, p.200 Problem 5.2\nW. Greiner, Quantum Mechanics: An Introduction Forth Edition (Springer, 2001) p.217 The Hydrogen Atom, p.236 9.5 Spectrum of a Diatomic Molecule\n\n\n\n\n\n","category":"type"},{"location":"CoulombTwoBody/#Potential","page":"Coulomb 2-Body System","title":"Potential","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.V-Tuple{CoulombTwoBody, Any}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.V","text":"V(model::CoulombTwoBody, r)\n\nbeginaligned\n  V(r)\n  = - fracz_1 z_2 e^24pivarepsilon_0 r \n  = - frace^24pivarepsilon_0 a_0 fracz_1 z_2ra_0\n  = - fracz_1 z_2ra_0 E_mathrmh\nendaligned\n\nwhere E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Eigenvalues","page":"Coulomb 2-Body System","title":"Eigenvalues","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.E-Tuple{CoulombTwoBody}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.E","text":"E(model::CoulombTwoBody; n::Int=1)\n\nE_n\n= -frac(z_1 z_2)^22n^2 fracmum_mathrme E_mathrmh\n\nwhere mu=left(frac1m_1+frac1m_2right)^-1 is the reduced mass of particle 1 and particle 2, E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. About atomic units, see section 3.9.2 of the IUPAC GreenBook. In other units, E_mathrmh = 27211386245988(53)mathrmeV from here.\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Eigenfunctions","page":"Coulomb 2-Body System","title":"Eigenfunctions","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.ψ-Tuple{CoulombTwoBody, Any, Any, Any}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.ψ","text":"ψ(model::CoulombTwoBody, r, θ, φ; n::Int=1, l::Int=0, m::Int=0)\n\npsi_nlm(pmbr) = R_nl(r) Y_lm(thetavarphi)\n\nThe domain is 0leq r lt infty 0leq theta lt pi 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Radial-Functions","page":"Coulomb 2-Body System","title":"Radial Functions","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.R-Tuple{CoulombTwoBody, Any}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.R","text":"R(model::CoulombTwoBody, r; n=1, l=0)\n\nR_nl(r) = -sqrtfrac(n-l-1)2n(n+l) left(frac2Zn a_muright)^3 left(frac2Zrn a_muright)^l exp left(-fracZrn a_muright) L_n+l^2l+1 left(frac2Zrn a_muright)\n\nwhere frac1mu = frac1m_1+frac1m_2, a_mu = a_0 fracm_mathrmemu, Z = - z_1 z_2, the Laguerre polynomials are defined as L_n(x) = frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right), and the associated Laguerre polynomials are defined as L_n^k(x) = fracmathrmd^kmathrmdx^k L_n(x). Note that replace 2n(n+l) with 2n(n+l)^3 if the Laguerre polynomials are defined as L_n(x) = mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right). Note that replace L_n+l^2l+1(x) with - L_n-l-1^2l+1(x) if the associated Laguerre polynomials are defined as L_n^k(x) = (-1)^k fracmathrmd^kmathrmdx^k L_n+k(x), which we call the generalized Laguerre polynomials. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Associated-Laguerre-Polynomials","page":"Coulomb 2-Body System","title":"Associated Laguerre Polynomials","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.L-Tuple{CoulombTwoBody, Any}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.L","text":"L(model::CoulombTwoBody, x; n=0, k=0)\n\nnote: Note\nThe associated Laguerre polynomials L_n^k(x), not the generalized Laguerre polynomials L_n^(alpha)(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\nL_n^k(x)\n  = fracmathrmd^kmathrmdx^k L_n(x) \n  = fracmathrmd^kmathrmdx^k frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right) \n  = sum_m=0^n-k (-1)^m+k fracnm(m+k)(n-m-k) x^m \n  = (-1)^k L_n-k^(k)(x)\nendaligned\n\nwhere Laguerre polynomials are defined as L_n(x)=frac1nmathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right).\n\nExamples:\n\nbeginaligned\n  L_0^0(x) = 1 \n  L_1^0(x) = 1 - x \n  L_1^1(x) = 1 \n  L_2^0(x) = 1 - 2 x + 12 x^2 \n  L_2^1(x) = 2 - x \n  L_2^2(x) = 1 \n  L_3^0(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^1(x) = 3 - 3 x + 12 x^2 \n  L_3^2(x) = 3 - x \n  L_3^3(x) = 1 \n  L_4^0(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 512 x^4 \n  L_4^1(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_4^2(x) = 6 - 4 x + 12 x^2 \n  L_4^3(x) = 4 - x \n  L_4^4(x) = 1 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Spherical-Harmonics","page":"Coulomb 2-Body System","title":"Spherical Harmonics","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.Y-Tuple{CoulombTwoBody, Any, Any}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.Y","text":"Y(model::CoulombTwoBody, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Associated-Legendre-Polynomials","page":"Coulomb 2-Body System","title":"Associated Legendre Polynomials","text":"","category":"section"},{"location":"CoulombTwoBody/#Antique.P-Tuple{CoulombTwoBody, Any}-CoulombTwoBody","page":"Coulomb 2-Body System","title":"Antique.P","text":"P(model::CoulombTwoBody, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"CoulombTwoBody/#Usage-and-Examples","page":"Coulomb 2-Body System","title":"Usage & Examples","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by CoulombTwoBody and several parameters z₁, z₂, m₁, m₂, mₑ, a₀, Eₕ and ℏ are set as optional arguments.","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"using Antique\nPs = CoulombTwoBody(z₁=-1, z₂=1, m₁=1.0, m₂=1.0, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"CoulombTwoBody/#Parameters","page":"Coulomb 2-Body System","title":"Parameters","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"Ps.z₁\nPs.z₂\nPs.m₁\nPs.m₂\nPs.mₑ\nPs.a₀\nPs.Eₕ\nPs.ℏ","category":"page"},{"location":"CoulombTwoBody/#Eigenvalues-2","page":"Coulomb 2-Body System","title":"Eigenvalues","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"Example calculations for positronium:","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"E(Ps, n=1)\nE(Ps, n=2)","category":"page"},{"location":"CoulombTwoBody/#Mass-and-Charge-Dependence","page":"Coulomb 2-Body System","title":"Mass and Charge Dependence","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"The values of masses are cited from the 2018 CODATA recommended values, E. Tiesinga, et al., Rev. Mod. Phys. 93, 025010 (2021).","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"me = 1.0           # me # \nmµ = 206.7682830   # me # https://physics.nist.gov/cgi%2Dbin/cuu/Value?mmusme\nmp = 1836.15267343 # me # https://physics.nist.gov/cgi%2Dbin/cuu/Value?mpsme\nmd = 3670.48296788 # me # https://physics.nist.gov/cgi%2Dbin/cuu/Value?mdsme\nmt = 5496.92153573 # me # https://physics.nist.gov/cgi%2Dbin/cuu/Value?mtsme\nmh = 5495.88528007 # me # https://physics.nist.gov/cgi-bin/cuu/Value?mhsme\nma = 7294.29954142 # me # https://physics.nist.gov/cgi-bin/cuu/Value?malsme\n\nPs = CoulombTwoBody(m₁=me, m₂=me)\nMu = CoulombTwoBody(m₁=me, m₂=mµ)\nH  = CoulombTwoBody(m₁=me, m₂=mp)\nD  = CoulombTwoBody(m₁=me, m₂=md)\nT  = CoulombTwoBody(m₁=me, m₂=mt)\nBO = CoulombTwoBody(m₁=me, m₂=Inf)\n\nHe3⁺ = CoulombTwoBody(z₁=-1, z₂=+2, m₁=me, m₂=mh)\nHe4⁺ = CoulombTwoBody(z₁=-1, z₂=+2, m₁=me, m₂=ma)\nHe∞⁺ = CoulombTwoBody(z₁=-1, z₂=+2, m₁=me, m₂=Inf)\n\npμ = CoulombTwoBody(z₁=-1, z₂=+1, m₁=mµ, m₂=mp)\ndμ = CoulombTwoBody(z₁=-1, z₂=+1, m₁=mµ, m₂=md)\ntμ = CoulombTwoBody(z₁=-1, z₂=+1, m₁=mµ, m₂=mt)\nbμ = CoulombTwoBody(z₁=-1, z₂=+1, m₁=mµ, m₂=Inf)\nhμ = CoulombTwoBody(z₁=-1, z₂=+2, m₁=mµ, m₂=mh)\nαμ = CoulombTwoBody(z₁=-1, z₂=+2, m₁=mµ, m₂=ma)\n\nprintln(\"    \\tE / Eₕ\")\nprintln(\"Ps  \\t\", E(Ps))\nprintln(\"Mu  \\t\", E(Mu))\nprintln(\"H   \\t\", E(H))\nprintln(\"D   \\t\", E(D))\nprintln(\"T   \\t\", E(T))\nprintln(\"∞H  \\t\", E(BO))\nprintln(\"³He⁺\\t\", E(He3⁺))\nprintln(\"⁴He⁺\\t\", E(He4⁺))\nprintln(\"∞He⁺\\t\", E(He∞⁺))\nprintln(\"pμ  \\t\", E(pμ))\nprintln(\"dμ  \\t\", E(dμ))\nprintln(\"tμ  \\t\", E(tμ))\nprintln(\"bμ  \\t\", E(bμ))\nprintln(\"hμ  \\t\", E(hμ))\nprintln(\"αμ  \\t\", E(αμ))","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"println(\"   \\t<δ³(r)> / a₀⁻³\")\nprintln(\"1/8π =\\t\", 1/8/π)\nprintln(\"Ps    \\t\", abs(ψ(Ps,0,0,0))^2)\nprintln(\"Mu    \\t\", abs(ψ(Mu,0,0,0))^2)\nprintln(\"H     \\t\", abs(ψ(H ,0,0,0))^2)\nprintln(\"D     \\t\", abs(ψ(D ,0,0,0))^2)\nprintln(\"T     \\t\", abs(ψ(T ,0,0,0))^2)\nprintln(\"∞H    \\t\", abs(ψ(BO,0,0,0))^2)\nprintln(\"1/π = \\t\", 1/π)","category":"page"},{"location":"CoulombTwoBody/#Lifetime-of-Positronium","page":"Coulomb 2-Body System","title":"Lifetime of Positronium","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"The lifetime tau of positronium (Ps, mathrme^+mathrme^-) is written as","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"tau = frac1Gamma","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"Gamma = 4 pi alpha^4 c a_0^2 langledelta^3(pmbr)rangle","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"where langledelta^3(pmbr)rangle = langlepsidelta^3(pmbr)psirangle = psi(pmb0)^2 = frac18pi a_0^-3 simeq 2685times10^29mathrmm^-3 is the value of probability density at the origin (r=0).","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"# (7.169) in D. J. Griffiths, Introduction to Elementary Particles (John Wiley & Sons, Inc. 1987) ISBN 0-471-60386-4\n# S. Berko, H. N. Pendleton, Annual Review of Nuclear and Particle Science, 30, 543 (1980) https://doi.org/10.1146/annurev.ns.30.120180.002551)\n# A. M. Frolov, S. I. Kryuchkov, and V. H. Smith, Jr., Phys. Rev. A, 51, 4514 (1995) https://doi.org/10.1103/PhysRevA.51.4514\n\nα  = 7.2973525693e-3    #       # https://physics.nist.gov/cgi-bin/cuu/Value?alph\nc   = 299792458         # m s-1 # https://physics.nist.gov/cgi-bin/cuu/Value?c\na₀  = 5.29177210903e-11 # m     # https://physics.nist.gov/cgi-bin/cuu/Value?bohrrada0\n\nPs = CoulombTwoBody(z₁=1, z₂=-1, m₁=1.0, m₂=1.0, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\nδ = abs(ψ(Ps,0,0,0))^2 * a₀^(-3)\nΓ = 4 * π * α^4 * c *  a₀^2 * δ\nτ = 1/Γ\nprintln(\"<δ> = \", abs(ψ(Ps,0,0,0))^2, \" a₀⁻³\")\nprintln(\"    = \", δ, \" m⁻³\")\nprintln(\"Γ   = \", Γ / 1e9, \" GHz\")\nprintln(\"τ   = \", τ / 1e-12, \" ps\")","category":"page"},{"location":"CoulombTwoBody/#Hyperfine-Splitting","page":"Coulomb 2-Body System","title":"Hyperfine Splitting","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"The hyperfine splitting of hydrogen atoms is given as","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"Delta E (mathrmH) = -frac23 mu_0 gamma_mathrmp gamma_mathrme hbar^2 langledelta^3(pmbr)rangle","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"in Griffiths(1982). Note that this formula is not available for deuterium (D) and positronium (Ps) because of the different spin between the proton and the deuteron for D, and the contribution of positron-electron pair annihilation for Ps. And also note that the mass of proton is used for the definitions of gyromagnetic ratio in all nucleons and nuclei:","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"beginaligned\ngamma_mathrme   = frac-e2 m_mathrme g_mathrme     \ngamma_mathrme^+ = frac+e2 m_mathrme g_mathrme     \ngamma_mathrmmu = frac-e2 m_mathrmmu g_mathrmmu \ngamma_mathrmp   = frac+e2 m_mathrmp g_mathrmp     \ngamma_mathrmd   = frac+e2 m_mathrmp g_mathrmd     \ngamma_mathrmt   = frac+e2 m_mathrmp g_mathrmt     \ngamma_mathrmh   = frac+2e2 m_mathrmp g_mathrmh    \nendaligned","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"The value of the probability density at the origin is langledelta^3(pmbr)rangle = langlepsidelta^3(pmbr)psirangle = psi(pmb0)^2 simeq frac1pi a_0^-3 simeq 2148times10^30mathrmm^-3 in Mu, H, D and T. These values are very different in Ps, ^3mathrmHe^+ and muonic hydrogen (mathrmpmu) due to the difference of reduced masses and charges. The energy can be converted to a frequency (Hz) by v = Delta E  h.","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"a₀ = 5.29177210903e-11   # m  # https://physics.nist.gov/cgi-bin/cuu/Value?bohrrada0\nEₕ = 4.3597447222071e-18 # J  # https://physics.nist.gov/cgi-bin/cuu/Value?hr\nℏ  = 1.054571817e-34     # J s # https://physics.nist.gov/cgi-bin/cuu/Value?hbar\n\nme = 9.1093837015e-31  # kg # https://physics.nist.gov/cgi-bin/cuu/Value?me\nmµ = 1.883531627e-28   # kg # https://physics.nist.gov/cgi-bin/cuu/Value?mmu\nmp = 1.67262192369e-27 # kg # https://physics.nist.gov/cgi-bin/cuu/Value?mp\nmd = 3.3435837724e-27  # kg # https://physics.nist.gov/cgi-bin/cuu/Value?md\nmt = 5.0073567446e-27  # kg # https://physics.nist.gov/cgi-bin/cuu/Value?mt\nmh = 5.0064127796e-27  # kg # https://physics.nist.gov/cgi-bin/cuu/Value?mh\n\ne  = 1.602176634e-19  # C      # https://physics.nist.gov/cgi-bin/cuu/Value?e\nµ₀ = 1.25663706212e-6 # N A-2  # https://physics.nist.gov/cgi-bin/cuu/Value?mu0\nh  = 6.62607015e-34   # J Hz-1 # https://physics.nist.gov/cgi-bin/cuu/Value?h\neV = 1.602176634e-19  # J      # https://physics.nist.gov/cgi-bin/cuu/Value?evj\n\nge = 2.00231930436256 # https://physics.nist.gov/cgi-bin/cuu/Value?gem\ngµ = 2.0023318418     # https://physics.nist.gov/cgi-bin/cuu/Value?gmum\ngp = 5.5856946893     # https://physics.nist.gov/cgi-bin/cuu/Value?gp\ngd = 0.8574382338     # https://physics.nist.gov/cgi-bin/cuu/Value?gdn\ngt = 5.957924931      # https://physics.nist.gov/cgi-bin/cuu/Value?gtn\ngh = -4.255250615     # https://physics.nist.gov/cgi-bin/cuu/Value?ghn\n\nPs = CoulombTwoBody(z₁=-1, z₂=+1, m₁=me, m₂=me, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\nMu = CoulombTwoBody(z₁=-1, z₂=+1, m₁=me, m₂=mµ, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\nH  = CoulombTwoBody(z₁=-1, z₂=+1, m₁=me, m₂=mp, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\nD  = CoulombTwoBody(z₁=-1, z₂=+1, m₁=me, m₂=md, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\nT  = CoulombTwoBody(z₁=-1, z₂=+1, m₁=me, m₂=mt, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\nhe = CoulombTwoBody(z₁=-1, z₂=+2, m₁=me, m₂=mh, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\npμ = CoulombTwoBody(z₁=-1, z₂=+1, m₁=mµ, m₂=mp, mₑ=me, a₀=a₀, Eₕ=Eₕ, ℏ=ℏ)\n\nΔE_H  = 2/3 / 4 * µ₀ * ℏ^2 * e^2 * ge / me * gp / mp * abs(ψ(H,0,0,0))^2\nΔE_D  =   1 / 4 * µ₀ * ℏ^2 * e^2 * ge / me * gd / mp * abs(ψ(D,0,0,0))^2\nΔE_T  = 2/3 / 4 * µ₀ * ℏ^2 * e^2 * ge / me * gt / mp * abs(ψ(H,0,0,0))^2\nΔE_Ps = 7/6 / 4 * µ₀ * ℏ^2 * e^2 * ge / me * ge / me * abs(ψ(Ps,0,0,0))^2\nΔE_Mu = 2/3 / 4 * µ₀ * ℏ^2 * e^2 * ge / me * gµ / mµ * abs(ψ(Mu,0,0,0))^2\nΔE_he = 2/3 / 4 * µ₀ * ℏ^2 * e^2 * ge / me * gh / mp * abs(ψ(he,0,0,0))^2\nΔE_pµ = 2/3 / 4 * µ₀ * ℏ^2 * e^2 * gµ / mµ * gp / mp * abs(ψ(pµ,0,0,0))^2\n\n# Karshenboim(2001) https://doi.org/10.48550/arXiv.hep-ph/0109128\n# Karshenboim(2003) https://doi.org/10.48550/arXiv.hep-ph/0310099\n# Griffiths(1982)   https://doi.org/10.1119/1.12733\n# Adamczak(2012)    https://doi.org/10.1016/j.nimb.2012.04.001\n\nprintln(\"H \\t\", ΔE_H  / h / 1e6,  \" MHz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", \"1420.405751768(1)  MHz\\t  Karshenboim(2001)\")\nprintln(\"D \\t\", ΔE_D  / h / 1e6,  \" MHz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", \"327.384352522(2)   MHz\\t  Karshenboim(2001)\")\nprintln(\"T \\t\", ΔE_T  / h / 1e6,  \" MHz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", \"1516.701470773(8)  MHz\\t  Karshenboim(2001)\")\nprintln(\"Ps\\t\", ΔE_Ps / h / 1e6, \"  MHz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", \"203391.7(6)        MHz\\t  Karshenboim(2003)\")\nprintln(\"Mu\\t\", ΔE_Mu / h / 1e6, \"  MHz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", \"4463.30278(5)      MHz\\t  Karshenboim(2001)\")\nprintln(\"³He⁺\\t\", ΔE_he / h / 1e6, \" MHz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", \"-8665.649867(10)   MHz\\t  Karshenboim(2001)\")\nprintln(\"µp\\t\", ΔE_pµ / h / 1e12, \"  THz\\t  Antique.jl + CODATA2018\")\nprintln(\"  \\t\", 0.182725*eV / h / 1e12 , \"  THz\\t  Griffiths(1982), Adamczak(2012)\")","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"1S wave function of Ps:","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"import Antique\nPs = Antique.CoulombTwoBody(z₁=-1, z₂=1, m₁=1.0, m₂=1.0, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n@show Antique.E(Ps)\n\nusing CairoMakie\n\nfig = Figure(\n    size = (420,300),\n    fontsize = 11,\n    backgroundcolor = :transparent\n)\n\nax = Axis(\n    fig[1,1],\n    xlabel = L\"$r / a_0$\",\n    ylabel = L\"$\\psi(r) / a_0^{-3/2}$\",\n    ylabelsize = 16.5,\n    xlabelsize = 16.5,\n)\n\nlines!(ax, 0..10, r -> exp(-r/2)/sqrt(8π), label=\"exp(-r/2)/sqrt(8π)\")\nlines!(ax, 0..2, r -> (1-r/2)/sqrt(8π), label=\"(1-r/2)/sqrt(8π)\")\nlines!(ax, 0..10, r -> abs(Antique.ψ(Ps,r,0,0)), linestyle=:dash, color=:black, label=\"Antique.jl\")\n\naxislegend(ax, position=:rt, framevisible=false)\n\nfig","category":"page"},{"location":"CoulombTwoBody/#Testing","page":"Coulomb 2-Body System","title":"Testing","text":"","category":"section"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"Unit testing and integration testing were done using a computer algebra system (Symbolics.jl) and numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"CoulombTwoBody/","page":"Coulomb 2-Body System","title":"Coulomb 2-Body System","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/CoulombTwoBody.md\"))","category":"page"},{"location":"HarmonicOscillator/#Harmonic-Oscillator","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"The harmonic oscillator is the most frequently used model in quantum physics.","category":"page"},{"location":"HarmonicOscillator/#Definitions","page":"Harmonic Oscillator","title":"Definitions","text":"","category":"section"},{"location":"HarmonicOscillator/#Antique.HarmonicOscillator-HarmonicOscillator","page":"Harmonic Oscillator","title":"Antique.HarmonicOscillator","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m fracmathrmd^2mathrmdx ^2 + frac12 k x^2\n\nParameters are specified with the following struct:\n\nHO = HarmonicOscillator(k=1.0, m=1.0, ℏ=1.0)\n\nk is the force constant, m is the mass of the particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nMain:\n\nThe Digital Library of Mathematical Functions (DLMF) 18.5.18\ncpprefjp, hermite\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.48, 2.3.2 Analytic Method\n\nSupplemental:\n\nThe Digital Library of Mathematical Functions (DLMF)                                                    18.3 Table1, 18.5 Table1, 18.5.13, 18.5.18\nL. D. Landau, E. M. Lifshitz, Quantum Mechanics (Pergamon Press, 1965)                                  p.595 (a.4), (a.6)\nL. I. Schiff, Quantum Mechanics (McGraw-Hill Book Company, 1968)                                        p.71 (13.12)\nA. Messiah, Quanfum Mechanics (Dover Publications, 1999)                                                p.491 (B.59)\nW. Greiner, Quantum Mechanics: An Introduction Third Edition (Springer, 1994)                           p.152 (7.22)\nD. J. Griffiths, Introduction to Quantum Mechanics (Prentice Hall, 1995)                                p.41 Table 2.1, p.43 (2.70)\nD. A. McQuarrie, J. D. Simon, Physical Chemistry: A Molecular Approach (University Science Books, 1997) p.170 Table 5.2\nP. W. Atkins, J. De Paula, Atkins' Physical Chemistry, 8th edition (W. H. Freeman, 2008)                p.293 Table 9.1\nJ. J. Sakurai, J. Napolitano, Modern Quantum Mechanics Third Edition (Cambridge University Press, 2021) p.524 (B.29)\n\n\n\n\n\n","category":"type"},{"location":"HarmonicOscillator/#Potential","page":"Harmonic Oscillator","title":"Potential","text":"","category":"section"},{"location":"HarmonicOscillator/#Antique.V-Tuple{HarmonicOscillator, Any}-HarmonicOscillator","page":"Harmonic Oscillator","title":"Antique.V","text":"V(model::HarmonicOscillator, x)\n\nV(x)\n= frac12 k x^2\n= frac12 m omega^2 x^2\n= frac12 hbar omega xi^2\n\nwhere omega = sqrtkm is the angular frequency and xi = sqrtfracmomegahbarx.\n\n\n\n\n\n","category":"method"},{"location":"HarmonicOscillator/#Eigenvalues","page":"Harmonic Oscillator","title":"Eigenvalues","text":"","category":"section"},{"location":"HarmonicOscillator/#Antique.E-Tuple{HarmonicOscillator}-HarmonicOscillator","page":"Harmonic Oscillator","title":"Antique.E","text":"E(model::HarmonicOscillator; n::Int=0)\n\nE_n = hbar omega left( n + frac12 right)\n\nwhere omega = sqrtkm is the angular frequency.\n\n\n\n\n\n","category":"method"},{"location":"HarmonicOscillator/#Eigenfunctions","page":"Harmonic Oscillator","title":"Eigenfunctions","text":"","category":"section"},{"location":"HarmonicOscillator/#Antique.ψ-Tuple{HarmonicOscillator, Any}-HarmonicOscillator","page":"Harmonic Oscillator","title":"Antique.ψ","text":"ψ(model::HarmonicOscillator, x; n::Int=0)\n\npsi_n(x) = A_n H_n(xi) expleft( -fracxi^22 right)\n\nwhere omega = sqrtkm, xi = sqrtfracmomegahbarx, A_n = sqrtfrac1n 2^n sqrtfracmomegapihbar, H_n(x) = (-1)^n mathrme^x^2 fracmathrmd^nmathrmdx^n mathrme^-x^2 are defined.\n\n\n\n\n\n","category":"method"},{"location":"HarmonicOscillator/#Hermite-Polynomials","page":"Harmonic Oscillator","title":"Hermite Polynomials","text":"","category":"section"},{"location":"HarmonicOscillator/#Antique.H-Tuple{HarmonicOscillator, Any}-HarmonicOscillator","page":"Harmonic Oscillator","title":"Antique.H","text":"H(model::HarmonicOscillator, x; n=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  H_n(x)\n  = (-1)^n mathrme^x^2 fracmathrmd^nmathrmdx^n mathrme^-x^2 \n  = n sum_m=0^lfloor n2 rfloor frac(-1)^mm (n-2m)(2 x)^n-2m\nendaligned\n\nExamples:\n\nbeginaligned\n  H_0(x)  = 1 \n  H_1(x)  = 2 x \n  H_2(x)  = -2 + 4 x^2 \n  H_3(x)  = -12 x + 8 x^3 \n  H_4(x)  = 12 - 48 x^2 + 16 x^4 \n  H_5(x)  = 120 x - 160 x^3 + 32 x^5 \n  H_6(x)  = -120 + 720 x^2 - 480 x^4 + 64 x^6 \n  H_7(x)  = -1680 x + 3360 x^3 - 1344 x^5 + 128 x^7 \n  H_8(x)  = 1680 - 13440 x^2 + 13440 x^4 - 3584 x^6 + 256 x^8 \n  H_9(x)  = 30240 x - 80640 x^3 + 48384 x^5 - 9216 x^7 + 512 x^9 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"HarmonicOscillator/#Usage-and-Examples","page":"Harmonic Oscillator","title":"Usage & Examples","text":"","category":"section"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by HarmonicOscillator and several parameters k, m and ℏ are set as optional arguments.","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"using Antique\nHO = HarmonicOscillator(k=1.0, m=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Parameters:","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"HO.k\nHO.m\nHO.ℏ","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Eigenvalues:","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"E(HO, n=0)\nE(HO, n=1)","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Potential energy curve:","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"using CairoMakie\n\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$V(x)$\")\nlines!(ax, -5..5, x -> V(HO, x))\nf","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Wave functions:","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"using CairoMakie\n\n# setting\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$\\psi(x)$\")\n\n# plot\nw0 = lines!(ax, -5..5, x -> ψ(HO, x, n=0))\nw1 = lines!(ax, -5..5, x -> ψ(HO, x, n=1))\nw2 = lines!(ax, -5..5, x -> ψ(HO, x, n=2))\nw3 = lines!(ax, -5..5, x -> ψ(HO, x, n=3))\nw4 = lines!(ax, -5..5, x -> ψ(HO, x, n=4))\n\n# legend\naxislegend(ax, [w0, w1, w2, w3, w4], [L\"n=0\", L\"n=1\", L\"n=2\", L\"n=3\", L\"n=4\"], position=:lb)\n\nf","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Potential energy curve, Energy levels, Wave functions:","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"using CairoMakie\n\n# settings\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$x$\", ylabel=L\"$V(x),~E_n,~\\psi_n(x) \\times 5 + E_n$\", aspect=1, limits=(-5,5,0,5.2))\n# hidespines!(ax)\n# hidedecorations!(ax)\n\nfor n in 0:4\n  # classical turning point\n  xE = sqrt(2*HO.k*E(HO, n=n))\n  # energy\n  lines!(ax, [-xE,xE], fill(E(HO,n=n),2), color=:black, linewidth=2)\n  hlines!(ax, E(HO, n=n), color=:black, linewidth=1, linestyle=:dash)\n  # wave function\n  lines!(ax, -5..5, x -> E(HO,n=n) + 0.5*ψ(HO,x,n=n), linewidth=2)\nend\n\n#potential\nlines!(ax, -5..5, x -> V(HO, x), color=:black, linewidth=2)\n\nf\nsave(\"assets/fig/HarmonicOscillator.png\", f) # hide\n; # hide","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"(Image: )","category":"page"},{"location":"HarmonicOscillator/#Testing","page":"Harmonic Oscillator","title":"Testing","text":"","category":"section"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Unit testing and Integration testing were done using a computer algebra system (Symbolics.jl) and numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"HarmonicOscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/HarmonicOscillator.md\"))","category":"page"},{"location":"API/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"API/#Antique.CoulombTwoBody","page":"API reference","title":"Antique.CoulombTwoBody","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(pmbr) = E psi(pmbr)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu nabla^2 + fracz_1 z_2ra_0 E_mathrmh\n\nwhere mu=left(frac1m_1+frac1m_2right)^-1 is the reduced mass of particle 1 and particle 2. The potential includes only Coulomb interaction and it does not include fine or hyperfine interactions in this model. Parameters are specified with the following struct:\n\nCTB = CoulombTwoBody(z₁=-1, z₂=1, m₁=1.0, m₂=1.0, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n\nz₁ is the charge number of particle 1,  z₂ is the charge number of particle 2,  m₁ is the mass of particle 1,  m₂ is the mass of particle 2, m_mathrme is the electron mass (use the same unit as m₁ and m₂. For example of hydrogen atom, use m_mathrme=91093837139times10^-31mathrmkg, m_1=91093837139times10^-31mathrmkg and m_2=167262192595times10^-27mathrmkg in the IS unit system, use m_mathrme=10m_mathrme, m_1=10m_mathrme and m_2=1836152673426m_mathrme in the atomic unit.), a_0 is the Bohr radius, E_mathrmh is the Hartree energy and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nThe Digital Library of Mathematical Functions (DLMF), 18.3 Table1, 18.5 Table1, 18.5.16, 18.5.17\ncpprefjp, assoc_legendre, assoc_laguerre\nA. Messiah, Quanfum Mechanics VOLUME Ⅰ (North-Holland Publishing Company, 1961), p.412 I. THE HYDROGEN ATOM\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.143 4.2 THE HYDROGEN ATOM, p.200 Problem 5.1, p.200 Problem 5.2\nW. Greiner, Quantum Mechanics: An Introduction Forth Edition (Springer, 2001) p.217 The Hydrogen Atom, p.236 9.5 Spectrum of a Diatomic Molecule\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.DeltaPotential","page":"API reference","title":"Antique.DeltaPotential","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m fracmathrmd^2mathrmdx ^2 - alpha delta(x)\n\nParameters are specified with the following struct:\n\nDP = DeltaPotential(α=1.0, m=1.0, ℏ=1.0)\n\nalpha is the potential strength, m is the mass of particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.63, 2.5.2 The Delta-Function Well\nUCSD Physics 130, Quantum Physics\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.HarmonicOscillator","page":"API reference","title":"Antique.HarmonicOscillator","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m fracmathrmd^2mathrmdx ^2 + frac12 k x^2\n\nParameters are specified with the following struct:\n\nHO = HarmonicOscillator(k=1.0, m=1.0, ℏ=1.0)\n\nk is the force constant, m is the mass of the particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nMain:\n\nThe Digital Library of Mathematical Functions (DLMF) 18.5.18\ncpprefjp, hermite\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.48, 2.3.2 Analytic Method\n\nSupplemental:\n\nThe Digital Library of Mathematical Functions (DLMF)                                                    18.3 Table1, 18.5 Table1, 18.5.13, 18.5.18\nL. D. Landau, E. M. Lifshitz, Quantum Mechanics (Pergamon Press, 1965)                                  p.595 (a.4), (a.6)\nL. I. Schiff, Quantum Mechanics (McGraw-Hill Book Company, 1968)                                        p.71 (13.12)\nA. Messiah, Quanfum Mechanics (Dover Publications, 1999)                                                p.491 (B.59)\nW. Greiner, Quantum Mechanics: An Introduction Third Edition (Springer, 1994)                           p.152 (7.22)\nD. J. Griffiths, Introduction to Quantum Mechanics (Prentice Hall, 1995)                                p.41 Table 2.1, p.43 (2.70)\nD. A. McQuarrie, J. D. Simon, Physical Chemistry: A Molecular Approach (University Science Books, 1997) p.170 Table 5.2\nP. W. Atkins, J. De Paula, Atkins' Physical Chemistry, 8th edition (W. H. Freeman, 2008)                p.293 Table 9.1\nJ. J. Sakurai, J. Napolitano, Modern Quantum Mechanics Third Edition (Cambridge University Press, 2021) p.524 (B.29)\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.HydrogenAtom","page":"API reference","title":"Antique.HydrogenAtom","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(pmbr) = E psi(pmbr)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu nabla^2 - fracZra_0 E_mathrmh\n\nwhere mu=left(frac1m_mathrme+frac1m_mathrmpright)^-1 is the reduced mass of electron mathrme and proton mathrmp. mu = m_mathrme holds in the limit m_mathrmprightarrowinfty. The potential includes only Coulomb interaction and it does not include fine or hyperfine interactions in this model. Parameters are specified with the following struct:\n\nHA = HydrogenAtom(Z=1, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n\nZ is the atomic number, m_mathrme is the electron mass, a_0 is the Bohr radius, E_mathrmh is the Hartree energy and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nMain:\n\nThe Digital Library of Mathematical Functions (DLMF), 18.3 Table1, 18.5 Table1, 18.5.16, 18.5.17\ncpprefjp, assoc_legendre, assoc_laguerre\nA. Messiah, Quanfum Mechanics VOLUME Ⅰ (North-Holland Publishing Company, 1961), p.412 (XI.3), p.419 (XI.18) (XI.18a) (XI.18b), p.483 (B.12), p.493 (B.71) (B.72), p.494 (B.81), p495 (B.93)\n\nSupplemental:\n\ncpprefjp, legendre, assoc_legendre, laguerre, assoc_laguerre\nThe Digital Library of Mathematical Functions (DLMF), 18.3 Table1, 18.5 Table1, 18.5.16, 18.5.17, 18.5.12\nL. D. Landau, E. M. Lifshitz, Quantum Mechanics (Pergamon Press, 1965), p.598 (c.1), p.598 (c.4), p.603 (d.13)\nL. I. Schiff, Quantum Mechanics (McGraw-Hill Book Company, 1968), p.79 (14.12), p.93 (16.19)\nA. Messiah, Quanfum Mechanics (Dover Publications, 1999), p.493 (B.72), p.494 Table, p.493 (B.72), p.483 (B.12), p.483 (B.12)\nW. Greiner, Quantum Mechanics: An Introduction Third Edition (Springer, 1994), p.83 (4), p.83 (5), p.149 (21)\nD. J. Griffiths, Introduction to Quantum Mechanics (Prentice Hall, 1995), p.126 (4.28), p.96 Table3.1, p.126 (4.27), p.139 (4.88), p.140 Table4.4, p.139 (4.87), p.140 Table4.5\nD. A. McQuarrie, J. D. Simon, Physical Chemistry: A Molecular Approach (University Science Books, 1997), p.195 Table6.1, p.196 (6.26), p.196 Table6.2, p.207 Table6.4\nP. W. Atkins, J. De Paula, Atkins' Physical Chemistry, 8th edition (W. H. Freeman, 2008), p.234\nJ. J. Sakurai, J. Napolitano, Modern Quantum Mechanics Third Edition (Cambridge University Press, 2021), p.245 Problem 3.30.b, \n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.InfinitePotentialWell","page":"API reference","title":"Antique.InfinitePotentialWell","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m fracmathrmd^2mathrmdx ^2 + V(x)\n\nParameters are specified with the following struct:\n\nIPW = InfinitePotentialWell(L=1.0, m=1.0, ℏ=1.0)\n\nL is the length of the box, m is the mass of particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. J. Griffiths, D. F. Schroeter, Introduction to Quantum Mechanics Third Edition (Cambridge University Press, 2018) p.31, 2.2 THE INFINITE SQUARE WELL\n\nProofs\n\nEigen Functions & Eigen Values\nNormalization\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.InfinitePotentialWell3D","page":"API reference","title":"Antique.InfinitePotentialWell3D","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(xyz) = E psi(xyz)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m left(fracpartial^2partial x ^2 + fracpartial^2partial y ^2 + fracpartial^2partial z ^2right) + V(xyz)\n\nParameters are specified with the following struct:\n\nIPW3D = InfinitePotentialWell3D(L=[1.0,1.0,1.0], m=1.0, ℏ=1.0)\n\nL is a vector of the lengths of the box in x,y,z-direction, m is the mass of the particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. A. McQuarrie, J. D. Simon, Physical chemistry : a molecular approach (University Science Books, 1997) p.90, 3-9. The Problem of a Particle in a Three-Dimensional Box Is a Simple Extension of the One-Dimensional Case\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.MorsePotential","page":"API reference","title":"Antique.MorsePotential","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(r) = E psi(r)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu fracmathrmd^2mathrmdr ^2 + D_mathrme left( mathrme^-2a(r-r_e) - 2mathrme^-a(r-r_e) right)\n\nwhere a = sqrtfrack2Dₑ is defined. Parameters are specified with the following struct:\n\nMP = MorsePotential(rₑ=2.0, Dₑ=0.1, k=0.1, µ=918.1, ℏ=1.0)\n\nr_mathrme is the equilibrium bond distance, D_mathrme is the the well depth , k is the force constant, mu is the reduced mass and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nP. M. Morse, Phys. Rev., 34, 57 (1929)\nJ. P. Dahl, M. Springborg, J. Chem. Phys., 88, 4535 (1988). (62), (63)\nW. K. Shao, Y. He, J. Pan, J. Nonlinear Sci. Appl., 9, 5, 3388 (2016). (1.6) \nThe Digital Library of Mathematical Functions (DLMF) 18.3 Table1, 18.5 Table1, 18.5.12, 18.5.17_5\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.PoschlTeller","page":"API reference","title":"Antique.PoschlTeller","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(x) = E psi(x)\n\nand the Hamiltonian\n\n  hatH =\n  - frachbar^22 m fracmathrmd^2mathrmdx ^2\n  - frachbar^2m x_0^2 fraclambda(lambda+1)2 frac1mathrmcosh^2(xx_0)\n\nAfter introducing the dimensionless variables\n\n  x^ast equiv xx_0qquad E^ast equiv frachbar^2m x_0^2 E\n\nthe Schrödinger equation reduces to\n\n  hatH^ast psi(x^ast) = E^ast psi(x^ast)\n\nwith\n\n  hatH^ast = - frac12 fracmathrmd^2mathrmdx^ast^2 - fraclambda(lambda+1)2 frac1mathrmcosh^2(x^ast)\n\nParameters are specified within the following struct:\n\nPT = PoschlTeller(λ=1, m=1.0, ℏ=1.0, x₀=1.0)\n\nlambda determines the potential strength. Currently only integer values for lambda are supported.\n\nReferences\n\nG. Pöschl, E. Teller, Zeitschrift für Physik, 83 (3–4), 143 (1933): More general definitions are given as (2a), (2b) or (11).\nS. Flügge, Practical Quantum Mechanics (Springer Berlin Heidelberg, 1999) p.94 Problem 39. Potential hole of modified Poschl-Teller type.\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.RigidRotor","page":"API reference","title":"Antique.RigidRotor","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(thetavarphi) = E psi(thetavarphi)\n\nand the Hamiltonian\n\nbeginaligned\n  hatH = - frachbar^22mu nabla^2 + V(r) \n          = - frachbar^22I left frac1sintheta fracpartialpartialtheta left(sintheta fracpartialpartialthetaright) + frac1sin^2theta fracpartial^2partialphi^2  right \n          = fracL^22I\nendaligned\n\nwhere I=mu R^2 is the moment of intertia, mu=left(frac1m_1+frac1m_2right)^-1 is the reduced mass of two particles, R is the distance between the two particles, and L^2 is the angular momentum operator. Parameters are specified with the following struct:\n\nRR = RigidRotor(m₁=1.0, m₂=1.0, R=1.0, ℏ=1.0)\n\nm₁ and m₂ are mass of two particles, R is the distance, and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. A. McQuarrie, J. D. Simon, Physical chemistry : a molecular approach (University Science Books, 1997) p.173, 5.8 The Energy Levels of a Rigid Rotator Are E = hbar^2 J(J+1)  2I\nChemistry Libre Texts\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.SphericalOscillator","page":"API reference","title":"Antique.SphericalOscillator","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(pmbr) = E psi(pmbr)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu nabla^2 + frac12 k r^2\n\nParameters are specified with the following struct:\n\nSO = SphericalOscillator(k=1.0, μ=1.0, ℏ=1.0)\n\nk is the force constant, μ is the mass of particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nS. Flügge, Practical Quantum Mechanics (Springer Berlin Heidelberg, 1999) p.166, Problem 65. Spherical oscillator.\nQuantum harmonic oscillator\nUCSD Physics 130, Quantum Physics\n\n\n\n\n\n","category":"type"},{"location":"API/#Antique.E-Tuple{CoulombTwoBody}","page":"API reference","title":"Antique.E","text":"E(model::CoulombTwoBody; n::Int=1)\n\nE_n\n= -frac(z_1 z_2)^22n^2 fracmum_mathrme E_mathrmh\n\nwhere mu=left(frac1m_1+frac1m_2right)^-1 is the reduced mass of particle 1 and particle 2, E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. About atomic units, see section 3.9.2 of the IUPAC GreenBook. In other units, E_mathrmh = 27211386245988(53)mathrmeV from here.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{DeltaPotential}","page":"API reference","title":"Antique.E","text":"E(model::DeltaPotential)\n\nE = - fracmalpha^22hbar^2\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{HarmonicOscillator}","page":"API reference","title":"Antique.E","text":"E(model::HarmonicOscillator; n::Int=0)\n\nE_n = hbar omega left( n + frac12 right)\n\nwhere omega = sqrtkm is the angular frequency.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{HydrogenAtom}","page":"API reference","title":"Antique.E","text":"E(model::HydrogenAtom; n::Int=1)\n\nE_n\n= -fracm_mathrme e^4 Z^22n^2(4pivarepsilon_0)^2hbar^2\n= -fracZ^22n^2 E_mathrmh\n\nwhere E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. About atomic units, see section 3.9.2 of the IUPAC GreenBook. In other units, E_mathrmh = 27211386245988(53)mathrmeV from here.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{InfinitePotentialWell3D}","page":"API reference","title":"Antique.E","text":"E(model::InfinitePotentialWell3D; n::Vector{Int}=[1,1,1])\n\nE_n_xn_yn_z\n= frachbar^2 n_x^2 pi^22 m L_x^2\n+ frachbar^2 n_y^2 pi^22 m L_y^2\n+ frachbar^2 n_z^2 pi^22 m L_z^2\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{InfinitePotentialWell}","page":"API reference","title":"Antique.E","text":"E(model::InfinitePotentialWell; n::Int=1)\n\nE_n = frachbar^2 n^2 pi^22 m L^2\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{MorsePotential}","page":"API reference","title":"Antique.E","text":"E(model::MorsePotential; n::Int=0, nocheck=false)\n\nE_n = - D_mathrme + hbar omega left( n + frac12 right) - chi hbar omega left( n + frac12 right)^2\n\nwhere omega = sqrtkµ and chi = frachbaromega4D_mathrme are defined.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{PoschlTeller}","page":"API reference","title":"Antique.E","text":"E(model::PoschlTeller; n::Int=0, nocheck=false)\n\nE_n = -frachbar^2m x_0^2fracmu^22\n\nwhere mu = mu(n) = n_mathrmmax-n+1, and n_mathrmmax = leftlfloor lambda rightrfloor - 1.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{RigidRotor}","page":"API reference","title":"Antique.E","text":"E(model::RigidRotor; l::Int=0)\n\nE_l\n= frachbar^22Il(l+1)\n\nwhere I=mu R^2 is the moment of inertia, R is the distance, and mu is the reduced mass of the two particles.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.E-Tuple{SphericalOscillator}","page":"API reference","title":"Antique.E","text":"E(model::SphericalOscillator; n::Int=0, l::Int=0)\n\nE_nl\n= left(2n + l + frac32right)hbar omega\n\nwhere omega = sqrtkmu.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.H-Tuple{HarmonicOscillator, Any}","page":"API reference","title":"Antique.H","text":"H(model::HarmonicOscillator, x; n=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  H_n(x)\n  = (-1)^n mathrme^x^2 fracmathrmd^nmathrmdx^n mathrme^-x^2 \n  = n sum_m=0^lfloor n2 rfloor frac(-1)^mm (n-2m)(2 x)^n-2m\nendaligned\n\nExamples:\n\nbeginaligned\n  H_0(x)  = 1 \n  H_1(x)  = 2 x \n  H_2(x)  = -2 + 4 x^2 \n  H_3(x)  = -12 x + 8 x^3 \n  H_4(x)  = 12 - 48 x^2 + 16 x^4 \n  H_5(x)  = 120 x - 160 x^3 + 32 x^5 \n  H_6(x)  = -120 + 720 x^2 - 480 x^4 + 64 x^6 \n  H_7(x)  = -1680 x + 3360 x^3 - 1344 x^5 + 128 x^7 \n  H_8(x)  = 1680 - 13440 x^2 + 13440 x^4 - 3584 x^6 + 256 x^8 \n  H_9(x)  = 30240 x - 80640 x^3 + 48384 x^5 - 9216 x^7 + 512 x^9 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.L-Tuple{CoulombTwoBody, Any}","page":"API reference","title":"Antique.L","text":"L(model::CoulombTwoBody, x; n=0, k=0)\n\nnote: Note\nThe associated Laguerre polynomials L_n^k(x), not the generalized Laguerre polynomials L_n^(alpha)(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\nL_n^k(x)\n  = fracmathrmd^kmathrmdx^k L_n(x) \n  = fracmathrmd^kmathrmdx^k frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right) \n  = sum_m=0^n-k (-1)^m+k fracnm(m+k)(n-m-k) x^m \n  = (-1)^k L_n-k^(k)(x)\nendaligned\n\nwhere Laguerre polynomials are defined as L_n(x)=frac1nmathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right).\n\nExamples:\n\nbeginaligned\n  L_0^0(x) = 1 \n  L_1^0(x) = 1 - x \n  L_1^1(x) = 1 \n  L_2^0(x) = 1 - 2 x + 12 x^2 \n  L_2^1(x) = 2 - x \n  L_2^2(x) = 1 \n  L_3^0(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^1(x) = 3 - 3 x + 12 x^2 \n  L_3^2(x) = 3 - x \n  L_3^3(x) = 1 \n  L_4^0(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 512 x^4 \n  L_4^1(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_4^2(x) = 6 - 4 x + 12 x^2 \n  L_4^3(x) = 4 - x \n  L_4^4(x) = 1 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.L-Tuple{HydrogenAtom, Any}","page":"API reference","title":"Antique.L","text":"L(model::HydrogenAtom, x; n=0, k=0)\n\nnote: Note\nThe associated Laguerre polynomials L_n^k(x), not the generalized Laguerre polynomials L_n^(alpha)(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\nL_n^k(x)\n  = fracmathrmd^kmathrmdx^k L_n(x) \n  = fracmathrmd^kmathrmdx^k frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right) \n  = sum_m=0^n-k (-1)^m+k fracnm(m+k)(n-m-k) x^m \n  = (-1)^k L_n-k^(k)(x)\nendaligned\n\nwhere Laguerre polynomials are defined as L_n(x)=frac1nmathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right).\n\nExamples:\n\nbeginaligned\n  L_0^0(x) = 1 \n  L_1^0(x) = 1 - x \n  L_1^1(x) = 1 \n  L_2^0(x) = 1 - 2 x + 12 x^2 \n  L_2^1(x) = 2 - x \n  L_2^2(x) = 1 \n  L_3^0(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^1(x) = 3 - 3 x + 12 x^2 \n  L_3^2(x) = 3 - x \n  L_3^3(x) = 1 \n  L_4^0(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 512 x^4 \n  L_4^1(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_4^2(x) = 6 - 4 x + 12 x^2 \n  L_4^3(x) = 4 - x \n  L_4^4(x) = 1 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.L-Tuple{MorsePotential, Any}","page":"API reference","title":"Antique.L","text":"L(model::MorsePotential, x; n=0, α=0)\n\nnote: Note\nThe generalized Laguerre polynomials L_n^(alpha)(x), not the associated Laguerre polynomials L_n^k(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  L_n^(alpha)(x)\n  = fracx^-alphae^xn fracd^ndx^nleft(x^n+alphae^-xright) \n  = sum_k=0^n(-1)^k left(beginarrayl n+alpha  n-k endarrayright) fracx^kk  \n  = sum_k=0^n(-1)^k fracGamma(alpha+n+1)Gamma(alpha+k+1)Gamma(n-k+1) fracx^kk \nendaligned\n\nExamples:\n\nbeginaligned\n  L_0^(0)(x) = 1 \n  L_1^(0)(x) = 1 - x \n  L_1^(1)(x) = 2 - x \n  L_2^(0)(x) = 1 - 2 x + 12 x^2 \n  L_2^(1)(x) = 3 - 3 x + 12 x^2 \n  L_2^(2)(x) = 6 - 4 x + 12 x^2 \n  L_3^(0)(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^(1)(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_3^(2)(x) = 10 - 10 x + 52 x^2 - 16 x^3 \n  L_3^(3)(x) = 20 - 15 x + 3 x^2 - 16 x^3 \n  L_4^(0)(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 124 x^4 \n  L_4^(1)(x) = 5 - 10 x + 5 x^2 - 56 x^3 + 124 x^4 \n  L_4^(2)(x) = 15 - 20 x + 152 x^2 - 1 x^3 + 124 x^4 \n  L_4^(3)(x) = 35 - 35 x + 212 x^2 - 76 x^3 + 124 x^4 \n  L_4^(4)(x) = 70 - 56 x + 14 x^2 - 43 x^3 + 124 x^4 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.L-Tuple{SphericalOscillator, Any}","page":"API reference","title":"Antique.L","text":"L(model::SphericalOscillator, x; n=0, α=0)\n\nnote: Note\nThe generalized Laguerre polynomials L_n^(alpha)(x), not the associated Laguerre polynomials L_n^k(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  L_n^(alpha)(x)\n  = fracx^-alphae^xn fracd^ndx^nleft(x^n+alphae^-xright) \n  = sum_k=0^n(-1)^k left(beginarrayl n+alpha  n-k endarrayright) fracx^kk  \n  = sum_k=0^n(-1)^k fracGamma(alpha+n+1)Gamma(alpha+k+1)Gamma(n-k+1) fracx^kk \nendaligned\n\nExamples:\n\nbeginaligned\n  L_0^(0)(x) = 1 \n  L_1^(0)(x) = 1 - x \n  L_1^(1)(x) = 2 - x \n  L_2^(0)(x) = 1 - 2 x + 12 x^2 \n  L_2^(1)(x) = 3 - 3 x + 12 x^2 \n  L_2^(2)(x) = 6 - 4 x + 12 x^2 \n  L_3^(0)(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^(1)(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_3^(2)(x) = 10 - 10 x + 52 x^2 - 16 x^3 \n  L_3^(3)(x) = 20 - 15 x + 3 x^2 - 16 x^3 \n  L_4^(0)(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 124 x^4 \n  L_4^(1)(x) = 5 - 10 x + 5 x^2 - 56 x^3 + 124 x^4 \n  L_4^(2)(x) = 15 - 20 x + 152 x^2 - 1 x^3 + 124 x^4 \n  L_4^(3)(x) = 35 - 35 x + 212 x^2 - 76 x^3 + 124 x^4 \n  L_4^(4)(x) = 70 - 56 x + 14 x^2 - 43 x^3 + 124 x^4 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.P-Tuple{CoulombTwoBody, Any}","page":"API reference","title":"Antique.P","text":"P(model::CoulombTwoBody, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.P-Tuple{HydrogenAtom, Any}","page":"API reference","title":"Antique.P","text":"P(model::HydrogenAtom, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.P-Tuple{PoschlTeller, Any}","page":"API reference","title":"Antique.P","text":"P(model::PoschlTeller, x; n=0, m=0)\n\nAssociated Legendre polynomials are the associated Legendre functions for integer indices. Here we use the same notation of the associated Legendre functions as in the model HydrogenAtom.\n\nbeginaligned\nP_n^m(x)\n= left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n= left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n= frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.P-Tuple{RigidRotor, Any}","page":"API reference","title":"Antique.P","text":"P(model::RigidRotor, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.P-Tuple{SphericalOscillator, Any}","page":"API reference","title":"Antique.P","text":"P(model::SphericalOscillator, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.R-Tuple{CoulombTwoBody, Any}","page":"API reference","title":"Antique.R","text":"R(model::CoulombTwoBody, r; n=1, l=0)\n\nR_nl(r) = -sqrtfrac(n-l-1)2n(n+l) left(frac2Zn a_muright)^3 left(frac2Zrn a_muright)^l exp left(-fracZrn a_muright) L_n+l^2l+1 left(frac2Zrn a_muright)\n\nwhere frac1mu = frac1m_1+frac1m_2, a_mu = a_0 fracm_mathrmemu, Z = - z_1 z_2, the Laguerre polynomials are defined as L_n(x) = frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right), and the associated Laguerre polynomials are defined as L_n^k(x) = fracmathrmd^kmathrmdx^k L_n(x). Note that replace 2n(n+l) with 2n(n+l)^3 if the Laguerre polynomials are defined as L_n(x) = mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right). Note that replace L_n+l^2l+1(x) with - L_n-l-1^2l+1(x) if the associated Laguerre polynomials are defined as L_n^k(x) = (-1)^k fracmathrmd^kmathrmdx^k L_n+k(x), which we call the generalized Laguerre polynomials. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.R-Tuple{HydrogenAtom, Any}","page":"API reference","title":"Antique.R","text":"R(model::HydrogenAtom, r; n=1, l=0)\n\nR_nl(r) = -sqrtfrac(n-l-1)2n(n+l) left(frac2Zn a_0right)^3 left(frac2Zrn a_0right)^l exp left(-fracZrn a_0right) L_n+l^2l+1 left(frac2Zrn a_0right)\n\nwhere the Laguerre polynomials are defined as L_n(x) = frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right), and the associated Laguerre polynomials are defined as L_n^k(x) = fracmathrmd^kmathrmdx^k L_n(x). Note that replace 2n(n+l) with 2n(n+l)^3 if the Laguerre polynomials are defined as L_n(x) = mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right). Note that replace L_n+l^2l+1(x) with - L_n-l-1^2l+1(x) if the associated Laguerre polynomials are defined as L_n^k(x) = (-1)^k fracmathrmd^kmathrmdx^k L_n+k(x), which we call the generalized Laguerre polynomials. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.R-Tuple{SphericalOscillator, Any}","page":"API reference","title":"Antique.R","text":"R(model::SphericalOscillator, r; n=0, l=0)\n\nR_nl(r) = sqrt fracgamma^322sqrtpi sqrtfrac2^n+l+3 n(2n+2l+1) xi^l expleft(-xi^22right)L_n^(l+frac12) left(xi^2right)\n\nwhere gamma = muomegahbar and xi = sqrtgammar = sqrtmuomegahbarr are defined. The generalized Laguerre polynomials are defined as L_n^(alpha)(x) = fracx^-alpha mathrme^xn  fracmathrmd^nmathrmd x^nleft(mathrme^-x x^n+alpharight). The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{CoulombTwoBody, Any}","page":"API reference","title":"Antique.V","text":"V(model::CoulombTwoBody, r)\n\nbeginaligned\n  V(r)\n  = - fracz_1 z_2 e^24pivarepsilon_0 r \n  = - frace^24pivarepsilon_0 a_0 fracz_1 z_2ra_0\n  = - fracz_1 z_2ra_0 E_mathrmh\nendaligned\n\nwhere E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{DeltaPotential, Any}","page":"API reference","title":"Antique.V","text":"V(model::DeltaPotential, x)\n\nV(x) = -alpha delta(x)\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{HarmonicOscillator, Any}","page":"API reference","title":"Antique.V","text":"V(model::HarmonicOscillator, x)\n\nV(x)\n= frac12 k x^2\n= frac12 m omega^2 x^2\n= frac12 hbar omega xi^2\n\nwhere omega = sqrtkm is the angular frequency and xi = sqrtfracmomegahbarx.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{HydrogenAtom, Any}","page":"API reference","title":"Antique.V","text":"V(model::HydrogenAtom, r)\n\nbeginaligned\n  V(r)\n  = - fracZe^24pivarepsilon_0 r \n  = - frace^24pivarepsilon_0 a_0 fracZra_0\n  = - fracZra_0 E_mathrmh\nendaligned\n\nwhere E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{InfinitePotentialWell, Any}","page":"API reference","title":"Antique.V","text":"V(model::InfinitePotentialWell; x)\n\nV(x) =\nleft\n  beginarrayll\n  0       0 leq x leq L \n  infty  x lt 0 L lt x\n  endarray\nright\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{InfinitePotentialWell3D, Any}","page":"API reference","title":"Antique.V","text":"V(model::InfinitePotentialWell3D, x)\n\nV(xyz) =\nleft\n  beginarrayll\n  0       0 leq x leq L_x  mathrmand  0 leq y leq L_y  mathrmand  0 leq z leq L_z \n  infty  mathrmelsewhere\n  endarray\nright\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{MorsePotential, Any}","page":"API reference","title":"Antique.V","text":"V(model::MorsePotential, r)\n\nV(r) = D_mathrme left( mathrme^-2a(r-r_e) - 2mathrme^-a(r-r_e) right)\n\nwhere a = sqrtfrack2Dₑ is defined. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{PoschlTeller, Any}","page":"API reference","title":"Antique.V","text":"V(model::PoschlTeller, x)\n\nbeginaligned\nV(x)\n= -frachbar^2m x_0^2 fraclambda(lambda+1)2 mathrmsech^2(xx_0) \n= -frachbar^2m x_0^2 fraclambda(lambda+1)2 frac1mathrmcosh^2(xx_0) \nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{RigidRotor, Any}","page":"API reference","title":"Antique.V","text":"V(model::RigidRotor, r)\n\nbeginaligned\n  V(r)\n  = 0\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.V-Tuple{SphericalOscillator, Any}","page":"API reference","title":"Antique.V","text":"V(model::SphericalOscillator, r)\n\nV(r)\n= frac12 k r^2\n= frac12 mu omega^2 r^2\n= frac12 hbar omega xi^2\n\nwhere omega = sqrtkmu is the angular frequency and xi = sqrtfracmuomegahbarr.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.Y-Tuple{CoulombTwoBody, Any, Any}","page":"API reference","title":"Antique.Y","text":"Y(model::CoulombTwoBody, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.Y-Tuple{HydrogenAtom, Any, Any}","page":"API reference","title":"Antique.Y","text":"Y(model::HydrogenAtom, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.Y-Tuple{RigidRotor, Any, Any}","page":"API reference","title":"Antique.Y","text":"Y(model::RigidRotor, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.Y-Tuple{SphericalOscillator, Any, Any}","page":"API reference","title":"Antique.Y","text":"Y(model::SphericalOscillator, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.nₘₐₓ-Tuple{MorsePotential}","page":"API reference","title":"Antique.nₘₐₓ","text":"nₘₐₓ(model::MorsePotential)\n\nnote: Note\nNote that the number of bound states is equal to the maximum quantum number nₘₐₓ, since we count the ground state from n=1 in this model.\n\nn_mathrmmax = leftlfloor frac2 D_e - omegaomega rightrfloor\n\nwhere omega = sqrtkµ is defined.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.nₘₐₓ-Tuple{PoschlTeller}","page":"API reference","title":"Antique.nₘₐₓ","text":"nₘₐₓ(model::PoschlTeller)\n\nnote: Note\nNote that the number of bound states nₘₐₓ + 1 is not equal to the maximum quantum number nₘₐₓ, since we count the ground state from n=0 in this model.\n\nn_mathrmmax = leftlfloor lambda rightrfloor - 1\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{CoulombTwoBody, Any, Any, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::CoulombTwoBody, r, θ, φ; n::Int=1, l::Int=0, m::Int=0)\n\npsi_nlm(pmbr) = R_nl(r) Y_lm(thetavarphi)\n\nThe domain is 0leq r lt infty 0leq theta lt pi 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{DeltaPotential, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::DeltaPotential, x)\n\npsi(x) = fracsqrtmalphahbar mathrme^-malpha xhbar^2\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{HarmonicOscillator, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::HarmonicOscillator, x; n::Int=0)\n\npsi_n(x) = A_n H_n(xi) expleft( -fracxi^22 right)\n\nwhere omega = sqrtkm, xi = sqrtfracmomegahbarx, A_n = sqrtfrac1n 2^n sqrtfracmomegapihbar, H_n(x) = (-1)^n mathrme^x^2 fracmathrmd^nmathrmdx^n mathrme^-x^2 are defined.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{HydrogenAtom, Any, Any, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::HydrogenAtom, r, θ, φ; n::Int=1, l::Int=0, m::Int=0)\n\npsi_nlm(pmbr) = R_nl(r) Y_lm(thetavarphi)\n\nThe domain is 0leq r lt infty 0leq theta lt pi 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{InfinitePotentialWell, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::InfinitePotentialWell, x; n::Int=1)\n\npsi_n(x) = sqrtfrac2L sin fracnpi xL\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{InfinitePotentialWell3D, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::InfinitePotentialWell3D, x; n::Vector{Int}=[1,1,1])\n\nThe wave functions can be expressed as products of wave functions in a one-dimensional box.\n\nbeginaligned\n  psi_n_xn_yn_z(xyz)\n  =     psi_n_x(x)\n  times psi_n_y(y)\n  times psi_n_z(z) \n  =     sqrtfrac2L_x sin fracn_x pi xL_x\n  times sqrtfrac2L_y sin fracn_y pi yL_y\n  times sqrtfrac2L_z sin fracn_z pi zL_z\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{MorsePotential, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::MorsePotential, r; n::Int=0)\n\npsi_n(r) = N_n z^lambda-n-12 mathrme^-z2 L_n^(2lambda-2n-1)(xi)\n\nN_n = sqrtfracn(2lambda-2n-1)aGamma(2lambda-n), lambda = fracsqrt2mu D_mathrmeahbar, a = sqrtfrack2Dₑ, L_n^(alpha)(x) = fracx^-alpha mathrme^xn  fracmathrmd^nmathrmd x^nleft(mathrme^-x x^n+alpharight), xi = 2lambdamathrme^-a(r-r_e) are defined. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{PoschlTeller, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::PoschlTeller, x; n::Int=0)\n\npsi_n(x) = frac(-1)^μsqrtx_0 P_lambda^mu(mathrmtanh(xx_0)) sqrtmufracGamma(lambda-mu+1)Gamma(lambda+mu+1)\n\nwhere mu = mu(n) = n_mathrmmax-n+1, and n_mathrmmax = leftlfloor lambda rightrfloor - 1 and P_lambda^mu are the associated Legendre functions.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{RigidRotor, Any, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::RigidRotor, θ, φ; l::Int=0, m::Int=0)\n\npsi_lm(thetavarphi) = Y_lm(thetavarphi)\n\nThe wave functions are the spherical harmonics. The domain is 0leq theta lt pi and 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"API/#Antique.ψ-Tuple{SphericalOscillator, Any, Any, Any}","page":"API reference","title":"Antique.ψ","text":"ψ(model::SphericalOscillator, r, θ, φ; n::Int=0, l::Int=0, m::Int=0)\n\npsi_nlm(pmbr) = R_nl(r) Y_lm(thetavarphi)\n\nThe domain is 0leq r lt infty 0leq theta lt pi 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"MorsePotential/#Morse-Potential","page":"Morse Potential","title":"Morse Potential","text":"","category":"section"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"The Morse potential is a model for inter-nuclear anharmonic vibration in a diatomic molecule.","category":"page"},{"location":"MorsePotential/#Definitions","page":"Morse Potential","title":"Definitions","text":"","category":"section"},{"location":"MorsePotential/#Antique.MorsePotential-MorsePotential","page":"Morse Potential","title":"Antique.MorsePotential","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(r) = E psi(r)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu fracmathrmd^2mathrmdr ^2 + D_mathrme left( mathrme^-2a(r-r_e) - 2mathrme^-a(r-r_e) right)\n\nwhere a = sqrtfrack2Dₑ is defined. Parameters are specified with the following struct:\n\nMP = MorsePotential(rₑ=2.0, Dₑ=0.1, k=0.1, µ=918.1, ℏ=1.0)\n\nr_mathrme is the equilibrium bond distance, D_mathrme is the the well depth , k is the force constant, mu is the reduced mass and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nP. M. Morse, Phys. Rev., 34, 57 (1929)\nJ. P. Dahl, M. Springborg, J. Chem. Phys., 88, 4535 (1988). (62), (63)\nW. K. Shao, Y. He, J. Pan, J. Nonlinear Sci. Appl., 9, 5, 3388 (2016). (1.6) \nThe Digital Library of Mathematical Functions (DLMF) 18.3 Table1, 18.5 Table1, 18.5.12, 18.5.17_5\n\n\n\n\n\n","category":"type"},{"location":"MorsePotential/#Potential","page":"Morse Potential","title":"Potential","text":"","category":"section"},{"location":"MorsePotential/#Antique.V-Tuple{MorsePotential, Any}-MorsePotential","page":"Morse Potential","title":"Antique.V","text":"V(model::MorsePotential, r)\n\nV(r) = D_mathrme left( mathrme^-2a(r-r_e) - 2mathrme^-a(r-r_e) right)\n\nwhere a = sqrtfrack2Dₑ is defined. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"MorsePotential/#Eigenvalues","page":"Morse Potential","title":"Eigenvalues","text":"","category":"section"},{"location":"MorsePotential/#Antique.E-Tuple{MorsePotential}-MorsePotential","page":"Morse Potential","title":"Antique.E","text":"E(model::MorsePotential; n::Int=0, nocheck=false)\n\nE_n = - D_mathrme + hbar omega left( n + frac12 right) - chi hbar omega left( n + frac12 right)^2\n\nwhere omega = sqrtkµ and chi = frachbaromega4D_mathrme are defined.\n\n\n\n\n\n","category":"method"},{"location":"MorsePotential/#Maximum-Quantum-Number","page":"Morse Potential","title":"Maximum Quantum Number","text":"","category":"section"},{"location":"MorsePotential/#Antique.nₘₐₓ-Tuple{MorsePotential}-MorsePotential","page":"Morse Potential","title":"Antique.nₘₐₓ","text":"nₘₐₓ(model::MorsePotential)\n\nnote: Note\nNote that the number of bound states is equal to the maximum quantum number nₘₐₓ, since we count the ground state from n=1 in this model.\n\nn_mathrmmax = leftlfloor frac2 D_e - omegaomega rightrfloor\n\nwhere omega = sqrtkµ is defined.\n\n\n\n\n\n","category":"method"},{"location":"MorsePotential/#Eigenfunctions","page":"Morse Potential","title":"Eigenfunctions","text":"","category":"section"},{"location":"MorsePotential/#Antique.ψ-Tuple{MorsePotential, Any}-MorsePotential","page":"Morse Potential","title":"Antique.ψ","text":"ψ(model::MorsePotential, r; n::Int=0)\n\npsi_n(r) = N_n z^lambda-n-12 mathrme^-z2 L_n^(2lambda-2n-1)(xi)\n\nN_n = sqrtfracn(2lambda-2n-1)aGamma(2lambda-n), lambda = fracsqrt2mu D_mathrmeahbar, a = sqrtfrack2Dₑ, L_n^(alpha)(x) = fracx^-alpha mathrme^xn  fracmathrmd^nmathrmd x^nleft(mathrme^-x x^n+alpharight), xi = 2lambdamathrme^-a(r-r_e) are defined. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"MorsePotential/#Generalized-Laguerre-Polynomials","page":"Morse Potential","title":"Generalized Laguerre Polynomials","text":"","category":"section"},{"location":"MorsePotential/#Antique.L-Tuple{MorsePotential, Any}-MorsePotential","page":"Morse Potential","title":"Antique.L","text":"L(model::MorsePotential, x; n=0, α=0)\n\nnote: Note\nThe generalized Laguerre polynomials L_n^(alpha)(x), not the associated Laguerre polynomials L_n^k(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  L_n^(alpha)(x)\n  = fracx^-alphae^xn fracd^ndx^nleft(x^n+alphae^-xright) \n  = sum_k=0^n(-1)^k left(beginarrayl n+alpha  n-k endarrayright) fracx^kk  \n  = sum_k=0^n(-1)^k fracGamma(alpha+n+1)Gamma(alpha+k+1)Gamma(n-k+1) fracx^kk \nendaligned\n\nExamples:\n\nbeginaligned\n  L_0^(0)(x) = 1 \n  L_1^(0)(x) = 1 - x \n  L_1^(1)(x) = 2 - x \n  L_2^(0)(x) = 1 - 2 x + 12 x^2 \n  L_2^(1)(x) = 3 - 3 x + 12 x^2 \n  L_2^(2)(x) = 6 - 4 x + 12 x^2 \n  L_3^(0)(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^(1)(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_3^(2)(x) = 10 - 10 x + 52 x^2 - 16 x^3 \n  L_3^(3)(x) = 20 - 15 x + 3 x^2 - 16 x^3 \n  L_4^(0)(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 124 x^4 \n  L_4^(1)(x) = 5 - 10 x + 5 x^2 - 56 x^3 + 124 x^4 \n  L_4^(2)(x) = 15 - 20 x + 152 x^2 - 1 x^3 + 124 x^4 \n  L_4^(3)(x) = 35 - 35 x + 212 x^2 - 76 x^3 + 124 x^4 \n  L_4^(4)(x) = 70 - 56 x + 14 x^2 - 43 x^3 + 124 x^4 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"MorsePotential/#Usage-and-Examples","page":"Morse Potential","title":"Usage & Examples","text":"","category":"section"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ(), potential V() and nₘₐₓ() will be exported. In this system, the model is generated by MorsePotential and several parameters rₑ, Dₑ, k, µ and ℏ are set as optional arguments.","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"# Parameters for H₂⁺\n# https://doi.org/10.1002/slct.202102509\n# https://doi.org/10.5281/zenodo.5047817\n# https://physics.nist.gov/cgi-bin/cuu/Value?mpsme\nrₑ =  1.997193319969992120068298141276\nDₑ = - 0.5 - (-0.602634619106539878727562156289)\nk = 2*((-1.1026342144949464615+1/2.00) - (-0.602634619106539878727562156289)) / (2.00 - rₑ)^2\nµ = 1/(1/1836.15267343 + 1/1836.15267343)\nℏ = 1.0\n\nusing Antique\nMP = MorsePotential(rₑ=rₑ, Dₑ=Dₑ, k=k, µ=µ, ℏ=ℏ)\n; #hide","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Parameters:","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"MP.rₑ\nMP.Dₑ\nMP.k\nMP.µ\nMP.ℏ","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Maximum quantum number:","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"nₘₐₓ(MP)","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Eigenvalues:","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"E(MP, n=0)\nE(MP, n=1)","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Potential energy curve:","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"using CairoMakie\n\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$r$\", ylabel=L\"$V(r)$\",  limits=(0.0,20.0,-0.11,0.1))\nlines!(ax, 0.1:0.01:20, r -> V(MP, r))\nf","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Wave functions:","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"using CairoMakie\n\n# setting\nfig = Figure()\naxis = Axis(fig[1,1], xlabel=L\"$r$\", ylabel=L\"$\\psi(r)$\")\n\n# plot\nlines!(axis, 0..5, x -> ψ(MP, x, n=0), label=L\"n=0\")\nlines!(axis, 0..5, x -> ψ(MP, x, n=1), label=L\"n=1\")\nlines!(axis, 0..5, x -> ψ(MP, x, n=2), label=L\"n=2\")\nlines!(axis, 0..5, x -> ψ(MP, x, n=3), label=L\"n=3\")\nlines!(axis, 0..5, x -> ψ(MP, x, n=4), label=L\"n=4\")\n\n# legend\naxislegend(axis, position=:lb, framevisible=false)\n\nfig","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Potential energy curve, Energy levels, Comparison with harmonic oscillator:","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"using Antique\n\n# https://physics.nist.gov/cgi-bin/cuu/Value?mmusme\nm = 206.7682830\nμ = 1 / (1/m + 1/m)\nMP = MorsePotential(μ=μ)\n# @show nₘₐₓ(MP)\n\nusing CairoMakie\n\n# settings\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$r$\", ylabel=L\"$V(r),~E_n,~\\psi_n(r) \\times 5 + E_n$\", aspect=1, limits=(0.5,10,-0.105,0.007))\n# hidespines!(ax)\n# hidedecorations!(ax)\n\n@show nₘₐₓ(MP)\n\nfor n in 0:nₘₐₓ(MP)\n  # energy\n  EMP = E(MP, n=n)\n  lines!(ax, 0.1:0.01:15, r -> EMP > V(MP, r) ? EMP : NaN, color=:black, linewidth=2)\n  hlines!(ax, E(MP, n=n), color=:black, linewidth=1, linestyle=:dash)\n  # wave function\n  lines!(ax, 0..10, x -> E(MP,n=n) + 0.0065*ψ(MP,x,n=n), linewidth=2)\nend\n\n#potential\nlines!(ax, 0..10, x -> V(MP, x), color=:black, linewidth=2)\n\nf\nsave(\"assets/fig/MorsePotential.png\", f) # hide\n; # hide","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"(Image: )","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"where the potential of harmonic oscillator is defined as V(r) simeq frac12 k (r - r_mathrme)^2 + V_0.","category":"page"},{"location":"MorsePotential/#Testing","page":"Morse Potential","title":"Testing","text":"","category":"section"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"Unit testing and Integration testing were done using a computer algebra system (Symbolics.jl) and numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"MorsePotential/","page":"Morse Potential","title":"Morse Potential","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/MorsePotential.md\"))","category":"page"},{"location":"HydrogenAtom/#Hydrogen-Atom","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"","category":"section"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"The hydrogen atom is the simplest Coulomb 2-body system.","category":"page"},{"location":"HydrogenAtom/#Definitions","page":"Hydrogen Atom","title":"Definitions","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.HydrogenAtom-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.HydrogenAtom","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(pmbr) = E psi(pmbr)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22mu nabla^2 - fracZra_0 E_mathrmh\n\nwhere mu=left(frac1m_mathrme+frac1m_mathrmpright)^-1 is the reduced mass of electron mathrme and proton mathrmp. mu = m_mathrme holds in the limit m_mathrmprightarrowinfty. The potential includes only Coulomb interaction and it does not include fine or hyperfine interactions in this model. Parameters are specified with the following struct:\n\nHA = HydrogenAtom(Z=1, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n\nZ is the atomic number, m_mathrme is the electron mass, a_0 is the Bohr radius, E_mathrmh is the Hartree energy and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nMain:\n\nThe Digital Library of Mathematical Functions (DLMF), 18.3 Table1, 18.5 Table1, 18.5.16, 18.5.17\ncpprefjp, assoc_legendre, assoc_laguerre\nA. Messiah, Quanfum Mechanics VOLUME Ⅰ (North-Holland Publishing Company, 1961), p.412 (XI.3), p.419 (XI.18) (XI.18a) (XI.18b), p.483 (B.12), p.493 (B.71) (B.72), p.494 (B.81), p495 (B.93)\n\nSupplemental:\n\ncpprefjp, legendre, assoc_legendre, laguerre, assoc_laguerre\nThe Digital Library of Mathematical Functions (DLMF), 18.3 Table1, 18.5 Table1, 18.5.16, 18.5.17, 18.5.12\nL. D. Landau, E. M. Lifshitz, Quantum Mechanics (Pergamon Press, 1965), p.598 (c.1), p.598 (c.4), p.603 (d.13)\nL. I. Schiff, Quantum Mechanics (McGraw-Hill Book Company, 1968), p.79 (14.12), p.93 (16.19)\nA. Messiah, Quanfum Mechanics (Dover Publications, 1999), p.493 (B.72), p.494 Table, p.493 (B.72), p.483 (B.12), p.483 (B.12)\nW. Greiner, Quantum Mechanics: An Introduction Third Edition (Springer, 1994), p.83 (4), p.83 (5), p.149 (21)\nD. J. Griffiths, Introduction to Quantum Mechanics (Prentice Hall, 1995), p.126 (4.28), p.96 Table3.1, p.126 (4.27), p.139 (4.88), p.140 Table4.4, p.139 (4.87), p.140 Table4.5\nD. A. McQuarrie, J. D. Simon, Physical Chemistry: A Molecular Approach (University Science Books, 1997), p.195 Table6.1, p.196 (6.26), p.196 Table6.2, p.207 Table6.4\nP. W. Atkins, J. De Paula, Atkins' Physical Chemistry, 8th edition (W. H. Freeman, 2008), p.234\nJ. J. Sakurai, J. Napolitano, Modern Quantum Mechanics Third Edition (Cambridge University Press, 2021), p.245 Problem 3.30.b, \n\n\n\n\n\n","category":"type"},{"location":"HydrogenAtom/#Potential","page":"Hydrogen Atom","title":"Potential","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.V-Tuple{HydrogenAtom, Any}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.V","text":"V(model::HydrogenAtom, r)\n\nbeginaligned\n  V(r)\n  = - fracZe^24pivarepsilon_0 r \n  = - frace^24pivarepsilon_0 a_0 fracZra_0\n  = - fracZra_0 E_mathrmh\nendaligned\n\nwhere E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Eigenvalues","page":"Hydrogen Atom","title":"Eigenvalues","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.E-Tuple{HydrogenAtom}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.E","text":"E(model::HydrogenAtom; n::Int=1)\n\nE_n\n= -fracm_mathrme e^4 Z^22n^2(4pivarepsilon_0)^2hbar^2\n= -fracZ^22n^2 E_mathrmh\n\nwhere E_mathrmh = frachbar^2m_mathrmea_0^2 = frace^24pivarepsilon_0a_0 = fracm_mathrmee^4left(4pivarepsilon_0right)^2hbar^2 is the Hartree energy, one of atomic unit. About atomic units, see section 3.9.2 of the IUPAC GreenBook. In other units, E_mathrmh = 27211386245988(53)mathrmeV from here.\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Eigenfunctions","page":"Hydrogen Atom","title":"Eigenfunctions","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.ψ-Tuple{HydrogenAtom, Any, Any, Any}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.ψ","text":"ψ(model::HydrogenAtom, r, θ, φ; n::Int=1, l::Int=0, m::Int=0)\n\npsi_nlm(pmbr) = R_nl(r) Y_lm(thetavarphi)\n\nThe domain is 0leq r lt infty 0leq theta lt pi 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Radial-Functions","page":"Hydrogen Atom","title":"Radial Functions","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.R-Tuple{HydrogenAtom, Any}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.R","text":"R(model::HydrogenAtom, r; n=1, l=0)\n\nR_nl(r) = -sqrtfrac(n-l-1)2n(n+l) left(frac2Zn a_0right)^3 left(frac2Zrn a_0right)^l exp left(-fracZrn a_0right) L_n+l^2l+1 left(frac2Zrn a_0right)\n\nwhere the Laguerre polynomials are defined as L_n(x) = frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right), and the associated Laguerre polynomials are defined as L_n^k(x) = fracmathrmd^kmathrmdx^k L_n(x). Note that replace 2n(n+l) with 2n(n+l)^3 if the Laguerre polynomials are defined as L_n(x) = mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right). Note that replace L_n+l^2l+1(x) with - L_n-l-1^2l+1(x) if the associated Laguerre polynomials are defined as L_n^k(x) = (-1)^k fracmathrmd^kmathrmdx^k L_n+k(x), which we call the generalized Laguerre polynomials. The domain is 0leq r lt infty.\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Associated-Laguerre-Polynomials","page":"Hydrogen Atom","title":"Associated Laguerre Polynomials","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.L-Tuple{HydrogenAtom, Any}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.L","text":"L(model::HydrogenAtom, x; n=0, k=0)\n\nnote: Note\nThe associated Laguerre polynomials L_n^k(x), not the generalized Laguerre polynomials L_n^(alpha)(x), are used in this model.\n\nRodrigues' formula & closed-form:\n\nbeginaligned\nL_n^k(x)\n  = fracmathrmd^kmathrmdx^k L_n(x) \n  = fracmathrmd^kmathrmdx^k frac1n mathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right) \n  = sum_m=0^n-k (-1)^m+k fracnm(m+k)(n-m-k) x^m \n  = (-1)^k L_n-k^(k)(x)\nendaligned\n\nwhere Laguerre polynomials are defined as L_n(x)=frac1nmathrme^x fracmathrmd^nmathrmdx ^n left( mathrme^-x x^n right).\n\nExamples:\n\nbeginaligned\n  L_0^0(x) = 1 \n  L_1^0(x) = 1 - x \n  L_1^1(x) = 1 \n  L_2^0(x) = 1 - 2 x + 12 x^2 \n  L_2^1(x) = 2 - x \n  L_2^2(x) = 1 \n  L_3^0(x) = 1 - 3 x + 32 x^2 - 16 x^3 \n  L_3^1(x) = 3 - 3 x + 12 x^2 \n  L_3^2(x) = 3 - x \n  L_3^3(x) = 1 \n  L_4^0(x) = 1 - 4 x + 3 x^2 - 23 x^3 + 512 x^4 \n  L_4^1(x) = 4 - 6 x + 2 x^2 - 16 x^3 \n  L_4^2(x) = 6 - 4 x + 12 x^2 \n  L_4^3(x) = 4 - x \n  L_4^4(x) = 1 \n  vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Spherical-Harmonics","page":"Hydrogen Atom","title":"Spherical Harmonics","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.Y-Tuple{HydrogenAtom, Any, Any}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.Y","text":"Y(model::HydrogenAtom, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Associated-Legendre-Polynomials","page":"Hydrogen Atom","title":"Associated Legendre Polynomials","text":"","category":"section"},{"location":"HydrogenAtom/#Antique.P-Tuple{HydrogenAtom, Any}-HydrogenAtom","page":"Hydrogen Atom","title":"Antique.P","text":"P(model::HydrogenAtom, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"HydrogenAtom/#Usage-and-Examples","page":"Hydrogen Atom","title":"Usage & Examples","text":"","category":"section"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by HydrogenAtom and several parameters Z, Eₕ, mₑ, a₀ and ℏ are set as optional arguments.","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"using Antique\nH = HydrogenAtom(Z=1, Eₕ=1.0, a₀=1.0, mₑ=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Parameters:","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"H.Z\nH.Eₕ\nH.mₑ\nH.a₀\nH.ℏ","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Eigenvalues:","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"E(H, n=1)\nE(H, n=2)","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Wavelength (n=2rightarrow1, the first line of the Lyman series):","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Eₕ2nm⁻¹ = 2.1947463136320e-2 # https://physics.nist.gov/cgi-bin/cuu/CCValue?hrminv\nprintln(\"ΔE = \", E(H,n=2) - E(H,n=1), \" Eₕ\")\nprintln(\"λ  = \", ((E(H,n=2)-E(H,n=1))*Eₕ2nm⁻¹)^-1, \" nm\")","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Hyperfine Splitting:","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"# E. Tiesinga, et al., Rev. Mod. Phys. 93, 025010 (2021) https://doi.org/10.1103/RevModPhys.93.025010\ne  = 1.602176634e-19    # C      https://physics.nist.gov/cgi-bin/cuu/Value?e\nh  = 6.62607015e-34     # J Hz-1 https://physics.nist.gov/cgi-bin/cuu/Value?h\nc  = 299792458          # m s-1  https://physics.nist.gov/cgi-bin/cuu/Value?c\na0 = 5.29177210903e-11  # m      https://physics.nist.gov/cgi-bin/cuu/Value?bohrrada0\nμ0 = 1.25663706212e-6   # N A-2  https://physics.nist.gov/cgi-bin/cuu/Value?mu0\nμB = 9.2740100783e-24   # J T-1  https://physics.nist.gov/cgi-bin/cuu/Value?mub\nμN = 5.0507837461e-27   # J T-1  https://physics.nist.gov/cgi-bin/cuu/Value?mun\nge = 2.00231930436256   #        https://physics.nist.gov/cgi-bin/cuu/Value?gem\ngp = 5.5856946893       #        https://physics.nist.gov/cgi-bin/cuu/Value?gp\n\n# D. J. Griffiths, Am. J. Phys. 50, 698 (1982) https://doi.org/10.1119/1.12733\nδ = abs(ψ(H,0,0,0))^2\nΔE = 2 / 3 * μ0 * μN * μB * gp * ge * δ * a0^(-3)\nprintln(\"1/π    = \", 1/π)\nprintln(\"<δ(r)> = \", δ, \" a₀⁻³\")\nprintln(\"<δ(r)> = \", δ * a0^(-3), \" m⁻³\")\nprintln(\"ΔE = \", ΔE, \" J\")\nprintln(\"ν = ΔE/h = \", ΔE / h * 1e-6, \" MHz\")\nprintln(\"λ = hc/ΔE = \", h*c/ΔE*100, \" cm\")","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Potential energy curve:","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"using CairoMakie\n\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$r~/~a_0$\", ylabel=L\"$V(r)~/~E_\\mathrm{h}$\",  limits=(0.0,15.0,-2.0,0.2))\nlines!(ax, 0.1:0.01:20, r -> V(H, r))\nf","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"1S wave function:","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"import Antique\nH = Antique.HydrogenAtom(Z=1, mₑ=1.0, a₀=1.0, Eₕ=1.0, ℏ=1.0)\n@show Antique.E(H)\n\nusing CairoMakie\n\nfig = Figure(\n    size = (420,300),\n    fontsize = 11,\n    backgroundcolor = :transparent\n)\n\nax = Axis(\n    fig[1,1],\n    xlabel = L\"$r / a_0$\",\n    ylabel = L\"$\\psi(r) / a_0^{-3/2}$\",\n    ylabelsize = 16.5,\n    xlabelsize = 16.5,\n)\n\nlines!(ax, 0..5, r -> exp(-r)/sqrt(π), label=\"exp(-r)/sqrt(π)\")\nlines!(ax, 0..1, r -> (1-r)/sqrt(π), label=\"(1-r)/sqrt(π)\")\nlines!(ax, 0..5, r -> abs(Antique.ψ(H,r,0,0)), linestyle=:dash, color=:black, label=\"Antique.jl\")\n\naxislegend(ax, position=:rt, framevisible=false)\n\nfig","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Radial functions:","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"using CairoMakie\nusing LaTeXStrings\n\n# setting\nf = Figure()\nax = Axis(f[1,1], xlabel=L\"$r~/~a_0$\", ylabel=L\"$r^2|R_{nl}(r)|^2~/~a_0^{-1}$\", limits=(0,20,0,0.58))\n\n# plot\nws = []\nls = []\nfor n in 1:3\n  for l in 0:n-1\n    w = lines!(\n        ax,\n        0..20,\n        r -> r^2 * Antique.R(H,r,n=n,l=l)^2,\n        linewidth = 2,\n        linestyle = [:solid,:dash,:dot,:dashdot,:dashdotdot][l+1],\n        color = n,\n        colormap = :tab10,\n        colorrange = (1,10)\n    )\n    push!(ws, w)\n    push!(ls, latexstring(\"n=$n, l=$l\"))\n  end\nend\n\n# legend\naxislegend(ax, ws, ls, position=:rt)\n\nf","category":"page"},{"location":"HydrogenAtom/#Testing","page":"Hydrogen Atom","title":"Testing","text":"","category":"section"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"Unit testing and Integration testing were done using a computer algebra system (Symbolics.jl) and numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"HydrogenAtom/","page":"Hydrogen Atom","title":"Hydrogen Atom","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/HydrogenAtom.md\"))","category":"page"},{"location":"InfinitePotentialWell3D/#Infinite-Potential-Well-3D-(Particle-in-a-3D-Box)","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D (Particle in a 3D-Box)","text":"","category":"section"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"The three-dimensional infinite potential well (particle in a 3D-box) is one of the simplest models for a three-dimensional quantum mechanical system.","category":"page"},{"location":"InfinitePotentialWell3D/#Definitions","page":"Infinite Potential Well 3D","title":"Definitions","text":"","category":"section"},{"location":"InfinitePotentialWell3D/#Antique.InfinitePotentialWell3D-InfinitePotentialWell3D","page":"Infinite Potential Well 3D","title":"Antique.InfinitePotentialWell3D","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(xyz) = E psi(xyz)\n\nand the Hamiltonian\n\n  hatH = - frachbar^22m left(fracpartial^2partial x ^2 + fracpartial^2partial y ^2 + fracpartial^2partial z ^2right) + V(xyz)\n\nParameters are specified with the following struct:\n\nIPW3D = InfinitePotentialWell3D(L=[1.0,1.0,1.0], m=1.0, ℏ=1.0)\n\nL is a vector of the lengths of the box in x,y,z-direction, m is the mass of the particle and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. A. McQuarrie, J. D. Simon, Physical chemistry : a molecular approach (University Science Books, 1997) p.90, 3-9. The Problem of a Particle in a Three-Dimensional Box Is a Simple Extension of the One-Dimensional Case\n\n\n\n\n\n","category":"type"},{"location":"InfinitePotentialWell3D/#Potential","page":"Infinite Potential Well 3D","title":"Potential","text":"","category":"section"},{"location":"InfinitePotentialWell3D/#Antique.V-Tuple{InfinitePotentialWell3D, Any}-InfinitePotentialWell3D","page":"Infinite Potential Well 3D","title":"Antique.V","text":"V(model::InfinitePotentialWell3D, x)\n\nV(xyz) =\nleft\n  beginarrayll\n  0       0 leq x leq L_x  mathrmand  0 leq y leq L_y  mathrmand  0 leq z leq L_z \n  infty  mathrmelsewhere\n  endarray\nright\n\n\n\n\n\n","category":"method"},{"location":"InfinitePotentialWell3D/#Eigenvalues","page":"Infinite Potential Well 3D","title":"Eigenvalues","text":"","category":"section"},{"location":"InfinitePotentialWell3D/#Antique.E-Tuple{InfinitePotentialWell3D}-InfinitePotentialWell3D","page":"Infinite Potential Well 3D","title":"Antique.E","text":"E(model::InfinitePotentialWell3D; n::Vector{Int}=[1,1,1])\n\nE_n_xn_yn_z\n= frachbar^2 n_x^2 pi^22 m L_x^2\n+ frachbar^2 n_y^2 pi^22 m L_y^2\n+ frachbar^2 n_z^2 pi^22 m L_z^2\n\n\n\n\n\n","category":"method"},{"location":"InfinitePotentialWell3D/#Eigenfunctions","page":"Infinite Potential Well 3D","title":"Eigenfunctions","text":"","category":"section"},{"location":"InfinitePotentialWell3D/#Antique.ψ-Tuple{InfinitePotentialWell3D, Any}-InfinitePotentialWell3D","page":"Infinite Potential Well 3D","title":"Antique.ψ","text":"ψ(model::InfinitePotentialWell3D, x; n::Vector{Int}=[1,1,1])\n\nThe wave functions can be expressed as products of wave functions in a one-dimensional box.\n\nbeginaligned\n  psi_n_xn_yn_z(xyz)\n  =     psi_n_x(x)\n  times psi_n_y(y)\n  times psi_n_z(z) \n  =     sqrtfrac2L_x sin fracn_x pi xL_x\n  times sqrtfrac2L_y sin fracn_y pi yL_y\n  times sqrtfrac2L_z sin fracn_z pi zL_z\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"InfinitePotentialWell3D/#Usage-and-Examples","page":"Infinite Potential Well 3D","title":"Usage & Examples","text":"","category":"section"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by InfinitePotentialWell3D and several parameters Lx, Ly, Lz, m and ℏ are set as optional arguments.","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"using Antique\nIPW3D = InfinitePotentialWell3D(L=[1.0,1.0,1.0], m=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"Parameters:","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"IPW3D.L\nIPW3D.m\nIPW3D.ℏ","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"Eigenvalues:","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"E(IPW3D, n=[1,1,1])\nE(IPW3D, n=[2,1,1])\nE(IPW3D, n=[1,2,1])\nE(IPW3D, n=[1,1,2])\nE(IPW3D, n=[2,2,1])\nE(IPW3D, n=[2,1,2])\nE(IPW3D, n=[1,2,2])\nE(IPW3D, n=[2,2,2])","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"Wave functions:","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"using CairoMakie\n\n# settings\nfig = Figure()\naxis = Axis(fig[1,1], xlabel=L\"$x$\", ylabel=L\"$\\psi(x,0.5,0.5)$\")\n\n# plot\nlines!(axis, 0..1, x -> ψ(IPW3D, [x,0.5,0.5], n=[1,1,1]), label=L\"n=[1,1,1]\")\nlines!(axis, 0..1, x -> ψ(IPW3D, [x,0.5,0.5], n=[2,1,1]), label=L\"n=[2,1,1]\")\nlines!(axis, 0..1, x -> ψ(IPW3D, [x,0.5,0.5], n=[1,2,1]), label=L\"n=[1,2,1]\")\nlines!(axis, 0..1, x -> ψ(IPW3D, [x,0.5,0.5], n=[3,1,1]), label=L\"n=[3,1,1]\")\nlines!(axis, 0..1, x -> ψ(IPW3D, [x,0.5,0.5], n=[4,1,1]), label=L\"n=[4,1,1]\")\n\n# legend\naxislegend(axis, position=:lb, framevisible=false)\n\nfig","category":"page"},{"location":"InfinitePotentialWell3D/#Testing","page":"Infinite Potential Well 3D","title":"Testing","text":"","category":"section"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"Unit testing and Integration testing were done using numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"InfinitePotentialWell3D/","page":"Infinite Potential Well 3D","title":"Infinite Potential Well 3D","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/InfinitePotentialWell3D.md\"))","category":"page"},{"location":"RigidRotor/#Rigid-Rotor","page":"Rigid Rotor","title":"Rigid Rotor","text":"","category":"section"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"The linear rigid rotor model can be used in quantum mechanics to predict the rotational energy of a diatomic molecule. The rotational energy depends on the moment of inertia for the system, I.","category":"page"},{"location":"RigidRotor/#Definitions","page":"Rigid Rotor","title":"Definitions","text":"","category":"section"},{"location":"RigidRotor/#Antique.RigidRotor-RigidRotor","page":"Rigid Rotor","title":"Antique.RigidRotor","text":"Model\n\nThis model is described with the time-independent Schrödinger equation\n\n  hatH psi(thetavarphi) = E psi(thetavarphi)\n\nand the Hamiltonian\n\nbeginaligned\n  hatH = - frachbar^22mu nabla^2 + V(r) \n          = - frachbar^22I left frac1sintheta fracpartialpartialtheta left(sintheta fracpartialpartialthetaright) + frac1sin^2theta fracpartial^2partialphi^2  right \n          = fracL^22I\nendaligned\n\nwhere I=mu R^2 is the moment of intertia, mu=left(frac1m_1+frac1m_2right)^-1 is the reduced mass of two particles, R is the distance between the two particles, and L^2 is the angular momentum operator. Parameters are specified with the following struct:\n\nRR = RigidRotor(m₁=1.0, m₂=1.0, R=1.0, ℏ=1.0)\n\nm₁ and m₂ are mass of two particles, R is the distance, and hbar is the reduced Planck constant (Dirac's constant).\n\nReferences\n\nD. A. McQuarrie, J. D. Simon, Physical chemistry : a molecular approach (University Science Books, 1997) p.173, 5.8 The Energy Levels of a Rigid Rotator Are E = hbar^2 J(J+1)  2I\nChemistry Libre Texts\n\n\n\n\n\n","category":"type"},{"location":"RigidRotor/#Potential","page":"Rigid Rotor","title":"Potential","text":"","category":"section"},{"location":"RigidRotor/#Antique.V-Tuple{RigidRotor, Any}-RigidRotor","page":"Rigid Rotor","title":"Antique.V","text":"V(model::RigidRotor, r)\n\nbeginaligned\n  V(r)\n  = 0\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"RigidRotor/#Eigenvalues","page":"Rigid Rotor","title":"Eigenvalues","text":"","category":"section"},{"location":"RigidRotor/#Antique.E-Tuple{RigidRotor}-RigidRotor","page":"Rigid Rotor","title":"Antique.E","text":"E(model::RigidRotor; l::Int=0)\n\nE_l\n= frachbar^22Il(l+1)\n\nwhere I=mu R^2 is the moment of inertia, R is the distance, and mu is the reduced mass of the two particles.\n\n\n\n\n\n","category":"method"},{"location":"RigidRotor/#Eigenfunctions","page":"Rigid Rotor","title":"Eigenfunctions","text":"","category":"section"},{"location":"RigidRotor/#Antique.ψ-Tuple{RigidRotor, Any, Any}-RigidRotor","page":"Rigid Rotor","title":"Antique.ψ","text":"ψ(model::RigidRotor, θ, φ; l::Int=0, m::Int=0)\n\npsi_lm(thetavarphi) = Y_lm(thetavarphi)\n\nThe wave functions are the spherical harmonics. The domain is 0leq theta lt pi and 0leq varphi lt 2pi.\n\n\n\n\n\n","category":"method"},{"location":"RigidRotor/#Spherical-Harmonics","page":"Rigid Rotor","title":"Spherical Harmonics","text":"","category":"section"},{"location":"RigidRotor/#Antique.Y-Tuple{RigidRotor, Any, Any}-RigidRotor","page":"Rigid Rotor","title":"Antique.Y","text":"Y(model::RigidRotor, θ, φ; l=0, m=0)\n\nY_lm(thetavarphi) = (-1)^fracm+m2 sqrtfrac2l+14pi frac(l-m)(l+m) P_l^m (costheta) mathrme^imvarphi\n\nThe domain is 0leq theta lt pi 0leq varphi lt 2pi. Note that some variants are connected by \n\ni^m+m sqrtfrac(l-m)(l+m) P_l^m = (-1)^fracm+m2 sqrtfrac(l-m)(l+m) P_l^m = (-1)^m sqrtfrac(l-m)(l+m) P_l^m\n\n\n\n\n\n","category":"method"},{"location":"RigidRotor/#Associated-Legendre-Polynomials","page":"Rigid Rotor","title":"Associated Legendre Polynomials","text":"","category":"section"},{"location":"RigidRotor/#Antique.P-Tuple{RigidRotor, Any}-RigidRotor","page":"Rigid Rotor","title":"Antique.P","text":"P(model::RigidRotor, x; n=0, m=0)\n\nRodrigues' formula & closed-form:\n\nbeginaligned\n  P_n^m(x)\n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m P_n(x) \n  = left( 1-x^2 right)^m2 fracmathrmd^mmathrmdx^m frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right \n  = frac12^n (1-x^2)^m2 sum_j=0^leftlfloorfracn-m2rightrfloor (-1)^j frac(2n-2j)j (n-j) (n-2j-m) x^(n-2j-m)\nendaligned\n\nwhere Legendre polynomials are defined as P_n(x) = frac12^n n fracmathrmd^nmathrmdx ^n left left( x^2-1 right)^n right. Note that P_l^-m = (-1)^m frac(l-m)(l+m) P_l^m for m0. (It is not compatible with P_k^m(t) = (-1)^mleft( 1-t^2 right)^m2 fracmathrmd^m P_k(t)mathrmdt^m caused by (-1)^m.) The specific formulae are given below.\n\nExamples:\n\nbeginaligned\n  P_0^0(x) = 1 \n  P_1^0(x) = x \n  P_1^1(x) = left(+1right)sqrt1-x^2 \n  P_2^0(x) = -12 + 32 x^2 \n  P_2^1(x) = left(-3 xright)sqrt1-x^2 \n  P_2^2(x) = 3 - 6 x \n  P_3^0(x) = -32 x + 52 x^3 \n  P_3^1(x) = left(32 - 152 x^2right)sqrt1-x^2 \n  P_3^2(x) = 15 x - 30 x^2 \n  P_3^3(x) = left(15 - 30 xright)sqrt1-x^2 \n  P_4^0(x) = 38 - 154 x^2 + 358 x^4 \n  P_4^1(x) = left(- 152 x + 352 x^3right)sqrt1-x^2 \n  P_4^2(x) = -152 + 15 x + 1052 x^2 - 105 x^3 \n  P_4^3(x) = left(105 x - 210 x^2right)sqrt1-x^2 \n  P_4^4(x) = 105 - 420 x + 420 x^2 \n   vdots\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"RigidRotor/#Usage-and-Examples","page":"Rigid Rotor","title":"Usage & Examples","text":"","category":"section"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"Install Antique.jl for the first use and run using Antique before each use. The energy E(), wave function ψ() and potential V() will be exported. In this system, the model is generated by RigidRotor and several parameters m₁, m₂, R and ℏ are set as optional arguments.","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"using Antique\nRR = RigidRotor(m₁=1.0, m₂=1.0, R=1.0, ℏ=1.0)\n; #hide","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"Parameters:","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"RR.m₁\nRR.m₂\nRR.R\nRR.ℏ","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"Eigenvalues:","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"E(RR, l=0)\nE(RR, l=1)\nE(RR, l=2)","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"Wave functions:","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"ψ(RR, 0, 0, l=2, m=1)\nψ(RR, π/4, 0, l=2, m=1)\nψ(RR, π/4, π/2, l=2, m=1)","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"using CairoMakie\n\nf = Figure(size=(420,300))\nax = PolarAxis(f[1,1], title=L\"$\\theta\\mapsto|\\psi_{2,1}(\\theta,0)|^2$\", rticklabelsvisible=false, thetalimits=(0,pi))\nlines!(ax, 0..2pi, θ->abs(ψ(RR,θ,0,l=2,m=1))^2, linewidth=2)\n\nf","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"using CairoMakie\n\nf = Figure(size=(420,300))\nax = PolarAxis(f[1,1], title=L\"$\\theta\\mapsto|\\psi_{lm}(\\theta,0)|^2$\", rticklabelsvisible=false, thetalimits=(0,pi))\nl1 = lines!(ax, 0..2pi, θ->abs(ψ(RR,θ,0,l=0,m=0))^2, linewidth=2)\nl2 = lines!(ax, 0..2pi, θ->abs(ψ(RR,θ,0,l=1,m=0))^2, linewidth=2)\nl3 = lines!(ax, 0..2pi, θ->abs(ψ(RR,θ,0,l=1,m=1))^2, linewidth=2)\nl4 = lines!(ax, 0..2pi, θ->abs(ψ(RR,θ,0,l=2,m=1))^2, linewidth=2)\nLegend(f[2,1], [l1,l2,l3,l4], [L\"(l,m)=(0,0)\",L\"(1,0)\",L\"(1,1)\",L\"(2,1)\"], framevisible=false, orientation=:horizontal, tellwidth=false, tellheight=true)\n\nf\nsave(\"assets/fig/RigidRotor.png\", f) # hide\n; # hide","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"(Image: )","category":"page"},{"location":"RigidRotor/#Testing","page":"Rigid Rotor","title":"Testing","text":"","category":"section"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"Unit testing and Integration testing were done using a computer algebra system (Symbolics.jl) and numerical integration (QuadGK.jl). The test script is here.","category":"page"},{"location":"RigidRotor/","page":"Rigid Rotor","title":"Rigid Rotor","text":"using Markdown\nusing Antique\nMarkdown.parse(Antique.load(\"../../test/result/RigidRotor.md\"))","category":"page"},{"location":"#Antique.jl","page":"Home","title":"Antique.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status)  (Image: Stable) (Image: Dev)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Antique.jl provides self-contained, well-tested, and well-documented implementations of analytical solutions to solvable quantum mechanical models. Analytical solutions are the most reliable benchmarks for software testing in the development of numerical methods. In addition to testing numerical methods, this package is useful for teaching quantum mechanics. We aim to support researchers, lecturers, students, and any person who is interested in quantum mechanics.","category":"page"},{"location":"#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Run the following code on the REPL to install this package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"]add Antique@0.12.0","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or run import Pkg; Pkg.add(; name=\"Antique\", version=\"0.12.0\") to install on Jupyter Notebook. The version of this package can be found at ]status Antique or import Pkg; Pkg.status(\"Antique\").","category":"page"},{"location":"#Usage-and-Examples","page":"Home","title":"Usage & Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Install Antique.jl for the first use and run using Antique before each use.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Antique","category":"page"},{"location":"","page":"Home","title":"Home","text":"The energy E(), the wave function ψ(), the potential V() and some other functions will be exported. There are two ways to avoid function name conflicts. Run import Antique instead of using Antique, and use the energy Antique.E(), the wave function Antique.ψ() and the potential Antique.V(). Or try giving other function names like using Antique: V as potential, E as energy, ψ as wavefuntion, HydrogenAtom. Here are examples for the hydrogen-like atom. The analytical notation of the energy (the eigen value of the Hamiltonian) is written as","category":"page"},{"location":"","page":"Home","title":"Home","text":"E_n = -fracZ^22n^2 E_mathrmh","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Hydrogen atom has the symbol mathrmH and atomic number 1 (Z=1). Therefore the ground state (n=1) energy is -frac12 E_mathrmh.","category":"page"},{"location":"","page":"Home","title":"Home","text":"H = HydrogenAtom(Z=1)\nE(H, n=1)\n# output> -0.5","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Helium cation has the symbol mathrmHe^+ and atomic number 2 (Z=2). Therefore the ground state (n=1) energy is -2 E_mathrmh.","category":"page"},{"location":"","page":"Home","title":"Home","text":"He⁺ = HydrogenAtom(Z=2)\nE(He⁺, n=1)\n# output> -2.0","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are more examples on each model page.","category":"page"},{"location":"#Supported-Models","page":"Home","title":"Supported Models","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div class=\"catalog\">\n  <div class=\"item\">\n    <a target=\"_blank\" href=\"./InfinitePotentialWell\">\n      <img src=\"assets/fig/InfinitePotentialWell.png\" alt=\"InfinitePotentialWell\"/>\n    </a>\n    <code>InfinitePotentialWell</code>\n  </div>\n  <div class=\"item\">\n    <a target=\"_blank\" href=\"./HarmonicOscillator\">\n      <img src=\"assets/fig/HarmonicOscillator.png\" alt=\"HarmonicOscillator\"/>\n    </a>\n    <code>HarmonicOscillator</code>\n  </div>\n  <div class=\"item\">\n    <a target=\"_blank\" href=\"./PoschlTeller\">\n      <img src=\"assets/fig/PoschlTeller.png\" alt=\"PoschlTeller\"/>\n    </a>\n    <code>PoschlTeller</code>\n  </div>\n  <div class=\"item\">\n    <a target=\"_blank\" href=\"./MorsePotential\">\n      <img src=\"assets/fig/MorsePotential.png\" alt=\"MorsePotential\"/>\n    </a>\n    <code>MorsePotential</code>\n  </div>\n</div>","category":"page"},{"location":"","page":"Home","title":"Home","text":"Delta Potential DeltaPotential\nInfinite Potential Well InfinitePotentialWell\nHarmonic Oscillator HarmonicOscillator\nPoschlTeller PoschlTeller\nMorse Potential MorsePotential\nRigid Rotor RigidRotor\nInfinite PotentialWell 3D InfinitePotentialWell3D\nSpherical Oscillator SphericalOscillator\nHydrogen Atom HydrogenAtom\nCoulomb 2-Body System CoulombTwoBody","category":"page"},{"location":"#Demonstration","page":"Home","title":"Demonstration","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is an example of a variational calculation for the hydrogen atom based on Thijssen(2007). We check the accuracy of the numerical solution by comparison with the analytical solution. Comparing wave functions can be difficult, but Antique.jl makes it easy. You can extend it to excited states (n1) as well as the ground state (n=1). Thus, Antique.jl is useful for testing numerical methods. We hope many numerical methods to be developed using Antique.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"# calculations based on Thijssen(2007) https://doi.org/10.1017/CBO9781139171397\nusing LinearAlgebra\nα = [13.00773, 1.962079, 0.444529, 0.1219492] \nnₘₐₓ = length(α)\nS = [(pi/(α[i]+α[j]))^(3/2) for i=1:nₘₐₓ, j=1:nₘₐₓ]\nH = [3*pi^(3/2)*α[i]*α[j]/(α[i]+α[j])^(5/2) - 2*pi/(α[i]+α[j]) for i=1:nₘₐₓ, j=1:nₘₐₓ]\nE, C = eigen(Symmetric(H),Symmetric(S))\n\n# norm & energy\nimport Antique\nHA = Antique.HydrogenAtom(Z=1, Eₕ=1.0, a₀=1.0, mₑ=1.0, ℏ=1.0)\nprintln(\"Norm\")\nprintln(\"  numerical : \", transpose(C[:,1]) * S * C[:,1])\nprintln(\"  analytical: \", 1)\nprintln(\"Energy\")\nprintln(\"  numerical : \", E[1])\nprintln(\"  analytical: \", Antique.E(HA,n=1))\n\n# wave function\nusing CairoMakie\nfig = Figure(size=(420,300), fontsize=11, backgroundcolor=:transparent)\naxis = Axis(fig[1,1], xlabel=L\"$r$\", ylabel=L\"$\\psi(r,0,0)$\", limits=(0,4,0,0.6), ylabelsize=16.5, xlabelsize=16.5)\nlines!(axis, 0:0.01:10, r -> sum(C[:,1] .* exp.(-α*r^2)), label=\"Numerical, Thijssen(2007)\")\nlines!(axis, 0:0.01:10, r -> real(Antique.ψ(HA,r,0,0)), color=:black, linestyle=:dash, label=\"Analytical, Antique.jl\")\naxislegend(axis, position=:rt, framevisible=false)\nfig\nsave(\"assets/fig/demonstration.png\", fig) # hide\n; # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#Future-Works","page":"Home","title":"Future Works","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The candidate models are listed on the Wikipedia page of List of quantum-mechanical systems with analytical solutions. Please submit your requests and suggestions as issues on GitHub.","category":"page"},{"location":"#Developer's-Guide","page":"Home","title":"Developer's Guide","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Here is the guideline for adding new models.","category":"page"},{"location":"#Acknowledgment","page":"Home","title":"Acknowledgment","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Thanks to all contributors. This package was named by @KB-satou and @ultimatile. @MartinMikkelsen contributed to writing docstrings. Special thanks to @hyrodium for his help with managing the documentation and advice on coding style. @lhapp27 implemented 2 models, and @ajarifi implemented 3 models.","category":"page"}]
}
